---+!! %TOPIC%

This plugin is an *add-on to SessionPlugin*, designed to support a "logon page" to authenticate access to TWiki. It is designed for use in environments where:
   * *it is not possible to use Apache authentication*, for example, you want to integrate with a corporate login standard, and there is no Apache auth module for it
   * *you want multiple layers of authentication*, for example, Basic<nop>Auth to access the site and view pages as a guest, and then some other scheme to allow access to edit)
   * *you want to logout and login as another user*

You have to provide an implementation of the =TWiki::Plugins::%TOPIC%::Validator::validate= method. Two working example implementations, one using the =TWiki::User::HtPasswdUser= module and the other using =Apache::Htpasswd= are included.

The plugin works by adding a call to an authentication function from each TWiki bin script that is to be protected. This function checks if the current session is authenticated, and if not, it redirects to a =login= script. This script prompts for credentials and calls your validator to check the credentials. If the credentials are sound, it caches the result of the validation in the session cookie and redirects to the original URL. The validator results are available from the SessionPlugin session variable =VALIDATION=, so other plugins can pick them up if needed.

Logged-in users can go back to the login page and log-in as a different user.

The login page is generated from the =templates/login.tmpl= template, so it can easily be tailored to your requirements.

__Note__ the login process does not use any encoding on passwords - they are sent in plain text. If there is any risk of your browser - to - server communications being tapped you should use SSL (secure sockets layer, or https:)

_( Discussion in TWiki:Plugins/%TOPIC%Dev )_

---
---+ Plugin Installation Instructions

__Note:__ These instructions are for the TWiki maintainer. No changes to your browser are required.

This plugin requires the TWiki20040902 ("Cairo") TWiki release, and the [[TWiki:Plugins/SessionPlugin][SessionPlugin]].
	* Download the ZIP file from the Plugin web (see below). Contents:
	| *File:* | *Description:* |
%$MANIFEST%
	* Unzip ==%TOPIC%.zip== in your twiki installation directory.
	* =perl= ==%TOPIC%_installer.pl== to automatically check and install other TWiki modules that this module depends on. This script also includes an _uninstaller_ should you ever wish to remove the plugin from your installation.
	* Alternatively, manually make sure the dependencies listed in the table below are resolved.
%$DEPENDENCIES%
	* Set the permissions correctly on the =login= script
	* You will have to edit each of the TWiki scripts in the =bin= directory that you want protected by a logon step. Immediately after the =TWiki::initialize= function has been called, add the following two lines:
	<pre>
	use TWiki::Plugins::AuthPagePlugin;
	TWiki::Plugins::AuthPagePlugin::authenticate( $query, $webName, $topic );
	</pre>
	( __Note__ that the variable names in =save= are slightly different; but you will work it out easily enough. )
	* To enable the =TWiki::User::HtPasswdUser= validator
		* change directory to  =lib/TWiki/Plugins/AuthPagePlugin=
		* copy =HtPasswdUser_Validator.pm= to =Validator.pm=
		* edit the validator and set up paths to password files etc.
	* To enable the =Apache::Htpasswd= validator
		* install CPAN:Apache::Htpasswd (http://www.cpan.org) 
		* change directory to  =lib/TWiki/Plugins/AuthPagePlugin=
		* copy =Apache_Htpasswd_Validator.pm to =Validator.pm=
		* edit the =.pm= file and set up the path to your password file.
	* Alternatively write a validator appropriate to your preferred authentication method.

If you are _also_ using standard webserver authentication, then some changes to SessionPlugin are required. SessionPlugin by default assumes that the REMOTE_USER set up by the webserver will be the same as the authorised user. When using %TOPIC% that isn't the case, so we need to make some small changes to SessionPlugin. Edit =Session<nop>Plugin.pm= and comment out the following lines in =_init_authuser=
<verbatim>
$session->clear() if( defined($session) && defined($session->param) && 
   defined($query) && defined( $query->remote_user() ) &&
   defined($authUserSessionVar) &&
   defined( $session->param( $authUserSessionVar ) ) &&
   "" ne $query->remote_user() && 
   "" ne $session->param( $authUserSessionVar ) &&
   $query->remote_user() ne $session->param( $authUserSessionVar ) );
</verbatim>
then comment out the first term of the condition just below, thus:
<verbatim>
       # See whether the user was logged in (first session, then webserver, then default)
        $authUser = #$query->remote_user() ||
                    $session->param( $authUserSessionVar ) || 
                    TWiki::Func::getDefaultUserName();
</verbatim>

A future release of SessionPlugin will make this behaviour conditional.
---
---+ Plugin Info

|  Plugin Author: | TWiki:Main/CrawfordCurrie |
|  Copyright: | &copy; 2005 Garage Games |
|  License: | GPL |
|  Plugin Version: | %$VERSION% |
|  Change History: | |
|  29 Mar 2005 | 1.001 Added HtPasswdUser_Validator.pm |
|  24 Mar 2005 | 1.000 First version |
|  Dependencies: | %$DEPENDENCIES% |
|  Plugin Home: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC% |
|  Feedback: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC%Dev |

This work was sponsored by <a href='http://www.garagegames.com'> 
  <img src='http://www.garagegames.com/images/GarageGames_banner.gif' alt='GarageGames.com' border=0>
</a>

__Related Topics:__ %TWIKIWEB%.TWikiPreferences, %TWIKIWEB%.TWikiPlugins

-- TWiki:Main/CrawfordCurrie - %$DATE%
