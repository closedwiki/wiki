# Configuration file for TWiki, held in 'lib' directory. You can edit
# this file directly to set your configuration, but it's much MUCH better
# to leave this file untouched and create a new file called "LocalSite.cfg"
# That way, there is no risk of your local settings being overwritten when
# you upgrade.
#
# See 'setlib.cfg' in 'bin' directory to configure non-standard location
# for 'lib' directory or Perl modules.
#
# Note that the comments in this file are formatted specifically so
# that the 'configure' script can extract documentation from here.
# You are *strongly* advised not to edit this file!
#
# This page is used to set up the configuration options for TWiki. Certain of
# the settings are required; these are marked with a
# <font color="red">*</font>. Fill in the settings, and then select 'Update'.
# The settings will be updated and you will be returned to this page. Any
# errors in your configuration will be <font color="red">highlighted</font>
# below.
# <p />
# If you are installing TWiki for the first time, and you are on a
# Unix or Linux platform and behind a firewall, the only section you
# should need to worry about below is "General path settings".
# <p />
# If you are on a public site, you will need to consider carefully
# how you are going to manage authentication and access control.
# <p />
# There are a number of documentation topics describing how to
# configure TWiki for different platforms, and a lot of support
# available at TWiki.org. The configuration settings currently in
# use can be managed using the 'configure' script.
#
# If your TWiki site is working, the front page should be
# <a href="$TWiki::cfg{ScriptUrlPath}/view$TWiki::cfg{ScriptSuffix}">right here</a>

######## Operating system ############################################

# **STRING 20**
# {OS} and {DetailedOS} are calculated in the TWiki code. <strong>You
# should only need to override if there is something badly wrong with
# those calculations.</strong><br />
# {OS} may be one of UNIX WINDOWS VMS DOS MACINTOSH OS2
# $cfg{OS} =
# **STRING 20**
# The value of Perl $OS
# $cfg{DetailedOS} =

######## General path settings #######################################
# If you are a first-time installer; once you have set up the next
# six paths below, your TWiki should work - try it. You can always come
# back and tweak other settings later.
# **URL M**
#  This is the root of all TWiki URLs e.g. http://myhost.com:123.
# $cfg{DefaultUrlHost} = 'http://your.domain.com';

# **PATH M**
# This is the 'cgi-bin' part of URLs used to access the TWiki bin
# directory e.g. /twiki/bin
# $cfg{ScriptUrlPath} = '/twiki/bin';

# **URLPATH M**
# Attachments URL path e.g. /twiki/pub
# $cfg{PubUrlPath} = '/twiki/pub';

# **PATH M**
# Attachments store (file path, not URL), must match /twiki/pub e.g.
# /usr/local/twiki/pub
# $cfg{PubDir} = '/home/httpd/twiki/pub';

# **PATH M**
# Template directory e.g. /usr/local/twiki/templates
# $cfg{TemplateDir} = '/home/httpd/twiki/templates';

# **PATH M**
# Topic files store (file path, not URL) e.g. /usr/local/twiki/data
# $cfg{DataDir} = '/home/httpd/twiki/data';

# **PATH**
# URL path to scripts used to render links. Defaults to {ScriptUrlPath}.
# May need to be set if using redirection to shorten URLs.
# $cfg{DispScriptUrlPath} = undef;

# **STRING 10**
# Suffix of TWiki CGI scripts (e.g. .cgi or .pl). You may need to set this
# if your webserver requires an extension.
$cfg{ScriptSuffix} = '';

######## Security setup ##############################################

# **BOOLEAN**
# Remember remote user by matching the IP address if no REMOTE_USER is set.
# You may want to set this if you are prompted to log in for every page
# access.
# (Note: Does not work reliably with dynamic IP addresses, and is a security
# risk anywhere that several users share the same IP address; you are
# <strong>strongly</strong> advised to install the SessionPlugin instead).
$cfg{RememberUserIPAddress} = $FALSE;

# **PATH**
# Pathname of temporary file that maps IP address to username if
# {RememberRemoteUser} is set
$cfg{RemoteUserFileName} = "$cfg{DataDir}/remoteusers.txt";

# **SELECT TWiki::Users::HtPasswdUser,TWiki::Users::NoPasswdUser**
# TWiki doesn't do its own authentication, but instead works closely
# with the web server that does the authentication. The following
# settings are used in the TWiki registration scripts to help maintain
# users and passwords in the web server's authentication environment.
# Name of the password handler implementation. TWiki ships with two
# alternative implementations:
# <ol><li>
# TWiki::Users::HtPasswdUser - handles 'htpasswd' format files, with
#   passwords encoded as per the HtpasswdEncoding
# </li><li>
# TWiki::Users::NoPasswdUser
# </li></ol>
# You can provide your own alternative by implementing the methods of
# the TWiki::Users::Password base class in a new package, and pointing
# to your package from here.
$cfg{PasswordManager} = 'TWiki::Users::HtPasswdUser';

# **PATH**
# Path to the file that stores passwords, for TWiki::Users::HtPasswdUser.
# You can use the <tt>htpasswd</tt> Apache program to create a new
# password file with the right encoding.
$cfg{Htpasswd}{FileName} = "$cfg{DataDir}/.htpasswd";

# **SELECT crypt,sha1,md5,plain**
# Password encryption, for TWiki::Users::HtPasswdUser.
# You can use the <tt>htpasswd</tt> Apache program to create a new
# password file with the right encoding. 'crypt' is the default, and
# should be used on Linux/Unix. Use 'sha1' on Windows. 'plain' stores
# passwords as plain text (no encryption).
$cfg{Htpasswd}{Encoding} = 'crypt';

# **STRING 80**
# Authentication realm (must be the same as in password file, MUST
# NOT contain colons). Only used with md5 encoding
$cfg{AuthRealm} =
'Enter your WikiName. (First name and last name, no space, no dots, capitalized, e.g. JohnSmith). Cancel to register if you do not have one.';

# **BOOLEAN**
# Hide password in registration email to the *user*
# Note that TWiki sends admins a separate confirmation.
$cfg{HidePasswdInRegistration} = $FALSE;

# **BOOLEAN**
# Map login name to Wiki name via the mapping in the topic named
# in {UsersTopicName}. Set this to $FALSE for .htpasswd
# authenticated sites where the user's wiki name is the
# name they use to log in, or if you have some other way of
# making the mapping to a Wiki name (e.g. a local Plugin).
$cfg{MapUserToWikiName} = $TRUE;

# **STRING 20**
# Group of users that can use special action=repRev and action=delRev
# on =save= and ALWAYS have edit powers. See TWiki.TWikiDocumentation
# for an explanation of twiki groups. <strong>Make sure you edit this topic
# if you enable authentication</strong>
$cfg{SuperAdminGroup} = 'TWikiAdminGroup';

# **STRING 20**
# Name of topic in the {UsersWebName} web where registered users
# are listed. Automatically maintained by the standard
# registration scripts. <strong>If you change this setting you will have to
# use TWiki to manually rename the existing topic</strong>
$cfg{UsersTopicName} = 'TWikiUsers';

# **PATH**
# Path control. If set, overrides the default PATH setting to control
# where TWiki looks for programs. Check notes for your operating
# system. NOTE: it is better to use full pathnames in the paths to
# external programs, rather than relying on this path.
# <ol>
#  <li> Unix or Linux
#   <ul>
#    <li> path separator is :</li>
#    <li> ensure diff and shell (Bourne or bash type) is found on 
#      the path.</li>
#   </ul>
#  </li>
#  <li> Windows ActiveState Perl, with non-Cygwin RCS, OR no
#      PERL5SHELL setting.
#   <ul>
#    <li> path separator is ;</li>
#    <li> The Windows system directory (e.g. c:\winnt\system32) is
#      required in this path.</li>
#    <li> Must NOT use '/' in pathnames as this upsets cmd.exe -
#      single '' is OK using Perl single-quoted string.</li>
#   </ul>
#  </li>
#  <li> Windows: ActiveState Perl, with Cygwin RCS and PERL5SHELL set
#      to 'c:/cygwin/bin/bash.exe -c'
#   <ul>
#    <li> path separator is ;</li>
#    <li> best to avoid 'c:/foo' type paths, because it can cause a
#      Perl 'Insecure directory in $ENV{PATH}' error.
#      The best approach is to convert 'c:/foo' to '/c/cygdrive/foo'
#      - odd looking but it works!  The Windows system directory 
#      (e.g. /cygdrive/c/winnt/system32) is required in this path.
#      For example:
#      /cygdrive/c/YOURCYGWINDIR/bin;/cygdrive/c/YOURWINDOWSDIR/system32</li>
#   </ul>
#  </li>
#  <li> Windows: ActiveState Perl, with non-Cygwin RCS,
#       OR no PERL5SHELL setting.
#   <ul>
#    <li> path separator is ';'</li>
#    <li> The Windows system directory is required in this path.
#       Must NOT use / in directories on the path as this upsets
#       cmd.exe - single '\' is OK using Perl single quoted string.
#       </li>
#   </ul>
#  </li>
# </ol>
$cfg{SafeEnvPath} = '/bin:/usr/bin';

# **BOOLEAN**
# Remove .. from %INCLUDE{filename}%, to stop includes
# of relative paths.
$cfg{DenyDotDotInclude} = $TRUE;

# **REGEX**
# Filter-in regex for uploaded (attached) file names (Matching
# filenames will have .txt appended) WARNING: Be sure to update
# this list with any configuration or script filetypes that are
# automatically run by your web server
$cfg{UploadFilter} = qr/^(\.htaccess|.*\.(?:php[0-9s]?|phtm[l]?|pl|py|cgi))$/;

# **REGEX**
# Filter-in regex for webnames, topic names, usernames, include paths
# and skin names
$cfg{NameFilter} = qr/[\s\*?~^$@%`"'&;|<>\x00-\x1f]/;

# **BOOLEAN**
# If this is set, the the search module will use more relaxed
# rules governing regular expressions searches.
$cfg{ForceUnsafeRegexes} = $FALSE;

# **STRING 50**
# Added to email addresses to Prevent spambots from grabbing
# addresses e.g. set to 'NOSPAM' to get user.com
# rendered as user.com. Usually only required
# for public websites.
$cfg{NoSpamPadding} = '';

# **STRING 50**
# Options added to external links (links to URLs that do not match
# {AntiSpam}{Clean}. Public sites should set this to 'rel="nofollow"'
# to prevent wiki spammers gaining any benefit from spamming.
$cfg{AntiSpam}{Options} = '';

# **REGEX**
# Regular expression that must match the start of any external links
# that are _not_ to have the {AntiSpam}{Options} added. The default
# is to leave links to twiki.org and to the server site untouched.
$cfg{AntiSpam}{Clean} = qr,(http://(www\.)?twiki.org\b|$cfg{DefaultUrlHost}|\W),io;

# **BOOLEAN**
# Build the path to /twiki/bin from the URL that was used to get this
# far. This can be useful when rewriting rules or redirection are used
# to shorten URLs. Note that displayed links are incorrect after failed
# authentication if this is set, so unless you really know what you are
# doing, leave it alone.
$cfg{GetScriptUrlFromCgi} = $FALSE;

# **BOOLEAN**
# Remove port number from URL. If set, and a URL is given with a port
# number e.g. http://my.server.com:8080/twiki/bin/view, this will strip
# off the port number before using the url in links.
$cfg{RemovePortNumber}  = $FALSE;

######## Log files ###################################################

# **BOOLEAN**
# Whether or not to to log different actions in the Access log
# (in order of how frequently they occur in a typical installation).
# Information in the Access log is used in gathering web statistics,
# and is useful as an audit trail of TWiki activity.
$cfg{Log}{view}     = $TRUE; # very frequent, every page view
# **BOOLEAN**
$cfg{Log}{search}   = $TRUE;
# **BOOLEAN**
$cfg{Log}{changes}  = $TRUE; # infrequent if you use WebChanges
# **BOOLEAN**
$cfg{Log}{rdiff}    = $TRUE; # whenever revisions are differenced
# **BOOLEAN**
$cfg{Log}{edit}     = $TRUE; # fairly frequent, every time a page is edited
# **BOOLEAN**
$cfg{Log}{save}     = $TRUE;
# **BOOLEAN**
$cfg{Log}{upload}   = $TRUE; # whenever a new attachment is created
# **BOOLEAN**
$cfg{Log}{attach}   = $TRUE;
# **BOOLEAN**
$cfg{Log}{rename}   = $TRUE; # when a topic or attachment is renamed
# **BOOLEAN**
$cfg{Log}{register} = $TRUE; # rare, when a new user registers

# Names of the various log files. You can use %DATE% (which gets expanded
# to YYYYMM e.g. 200501) in the pathnames to cause the file to be renewed
# every month e.g. /var/log/TWiki/log.%DATE%.
# {LogDir} directory must be writable by the CGI user
# It defaults to the data dir
$cfg{LogDir} ||= $cfg{DataDir};

# **PATH**
# File for configuration messages generated by the configure script.
# (usually very very low volume).
$cfg{ConfigurationLogName} = "$cfg{LogDir}/configurationlog.txt";

# **PATH**
# File for debug messages (usually very low volume). %DATE% gets expanded
# to YYYYMM (year, month), allowing you to rotate logs.
$cfg{DebugFileName} = "$cfg{LogDir}/debug.txt";

# **PATH**
# Warnings - low volume, hopefully! %DATE% gets expanded
# to YYYYMM (year, month), allowing you to rotate logs.
$cfg{WarningFileName} = "$cfg{LogDir}/warn%DATE%.txt";

# **PATH**
# Access log - high volume, depending on what you enabled in {Log} above.
# %DATE% gets expanded to YYYYMM (year, month), allowing you to rotate logs.
$cfg{LogFileName} = "$cfg{LogDir}/log%DATE%.txt";

######## Localisation ################################################

# **SELECT gmtime,servertime**
# Set the timezone (this only effects the display of times,
# all internal storage is still in GMT). May be gmtime or servertime
$cfg{DisplayTimeValues} = 'gmtime';

# **BOOLEAN**
# Internationalisation
# Set to enable internationalisation support for 8-bit character sets
$cfg{UseLocale} = $FALSE;

# **STRING 50**
# Site-wide locale - used by TWiki and external programs such as grep,
# and to specify the character set for the user's web browser.  The
# language part also prevents English plural handling for non-English
# languages.  Ignored unless {UseLocale} is set.
# <br />
# Locale names are not standardised - check 'locale -a' on your
# system to see what's installed, and check this works using command
# line tools.  You may also need to check what charsets your browsers
# accept - the 'preferred MIME names' at
# http://www.iana.org/assignments/character-sets are a good starting
# point.
# <br />
# WARNING: Topics are stored in site character set format, so data
# conversion of file names and contents will be needed if you change
# locales after creating topics whose names or contents include 8-bit
# characters.
# <br />
# Examples:<br />
# <code>de_AT.ISO-8859-15</code> - Austria with ISO-8859-15 for Euro<br />
# <code>ru_RU.KOI8-R</code> - Russia<br />
# <code>ja_JP.eucjp</code> - Japan <br />
# <code>C</code> - English only; no I18N features
$cfg{SiteLocale} = 'en_US.ISO-8859-1';

# **STRING 50**
# Site character set override - set this only if you must match a
# specific locale (from 'locale -a') whose character set is not
# supported by your chosen conversion module (i.e. Encode for Perl
# 5.8 or higher, or Unicode::MapUTF8 for other Perl versions).  For
# example, if the locale 'ja_JP.eucjp' exists on your system but only
# 'euc-jp' is supported by Unicode::MapUTF8, set this to 'euc-jp'.
$cfg{SiteCharsetOverride} = '';

# **BOOLEAN**
# Disable to force explicit listing of national chars in
# regexes, rather than relying on locale-based regexes. Intended
# for Perl 5.6 or higher on platforms with broken locales: should
# only be disabled if you have locale problems.
$cfg{LocaleRegexes} = $TRUE;

# **REGEX**
# If a suitable working locale is not available (i.e. {UseLocale}
# is disabled), OR  you are using Perl 5.005 (with or without working
# locales), OR {LocalRegexes} is disabled, you can use WikiWords with
# accented national characters by putting any '8-bit' accented
# national characters within these strings - i.e. {UpperNational}
# should contain upper case non-ASCII letters.  This is termed
# 'non-locale regexes' mode.
# If 'non-locale regexes' is in effect, WikiWord linking will work,
# but  some features such as sorting of WikiWords in search results
# may not. These features depend on {UseLocale}, which can be set
# independently of {LocaleRegexes}, so they will work with Perl
# 5.005 as long as {UseLocale} is set and you have working
# locales.
$cfg{UpperNational} = '';
# **REGEX**
$cfg{LowerNational} = '';

######## Store settings ##############################################

# **SELECT RcsWrap,RcsLite**
# Default store implementation.
# RcsWrap uses normal RCS executables.
# RcsLite uses a 100% Perl simplified implementation of RCS.
# RcsLite is useful if you don't have, and can't install, RCS - for
# example, on a hosted platform. It will work, and is compatible with
# RCS, but is not quite as fast.
$cfg{StoreImpl} = 'RcsWrap';

######## Settings for RCS #######
# The quote used for command arguments is normally ' for
# unix, and " for Windows.
# <strong>Note: If you override any of the paths, parameters of the form
# %ARG|T% must <em>NOT</em> be enclosed in any kind of quotes.</strong> 
# Otherwise the quotes will be treated as part of the parameter value.

$cfg{RCS}{BinDir} = "/usr/bin" unless defined($cfg{RCS}{BinDir});
unless( defined($cfg{RCS}{ExtOption})) {
    $cfg{RCS}{ExtOption} = "";
    $cfg{RCS}{ExtOption} = "-x,v" if $cfg{OS} eq "WINDOWS";
}

# **REGEX**
# Perl regular expression matching suffixes valid on plain text files
# Defines which attachments will be treated as ASCII in RCS
$cfg{RCS}{asciiFileSuffixes} = '.(txt|html|xml|pl)$';

# **OCTAL**
# File security for new directories. You may have to adjust these
# permissions to allow (or deny) users other than the webserver user access
# to directories that TWiki creates. This is an *octal* number
# representing the standard UNIX permissions (e.g. 755 == rwxr-xr-x)
$cfg{RCS}{dirPermission}= 0775;

# **OCTAL**
# File security for new files. You may have to adjust these
# permissions to allow (or deny) users other than the webserver user access
# to files that TWiki creates.  This is an *octal* number
# representing the standard UNIX permissions (e.g. 644 == rw-r--r--)
$cfg{RCS}{filePermission}= 0644;

# **BOOLEAN**
# Set this if you want to use RCS subdirectories instead of storing
# ,v files alongside the topics. Not recommended.
$cfg{RCS}{useSubDir} = $FALSE;

# **BOOLEAN**
# Set this if your RCS cannot check out using the -p option.
# May be needed in some windows installations (not required for cygwin)
$cfg{RCS}{coMustCopy} = $FALSE;

# **PATH**
# Full path to GNU-compatible egrep program. %CS{|-i}% will be expanded
# to -i for case-sensitive search or to the empty string otherwise..
# Similarly for %DET, which controls whether matching lines are required.
# (see the documentation on these options with GNU grep for details).
$cfg{RCS}{EgrepCmd} = '/bin/egrep %CS{|-i}% %DET{|-l}% -H -- %TOKEN|U% %FILES|F%';

# **PATH**
# Full path to GNU-compatible fgrep program
$cfg{RCS}{FgrepCmd} = '/bin/fgrep %CS{|-i}% %DET{|-l}% -H -- %TOKEN|U% %FILES|F%';

# **COMMAND**
# RCS init command, needed when initialising a file as binary
# %FILENAME|F% will be expanded to the filename
$cfg{RCS}{initBinaryCmd} = "$cfg{RCS}{BinDir}/rcs $cfg{RCS}{ExtOption} -q -i -t-none -kb %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{initTextCmd} = "$cfg{RCS}{BinDir}/rcs $cfg{RCS}{ExtOption} -q -i -t-none -ko %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{tmpBinaryCmd}  = "$cfg{RCS}{BinDir}/rcs $cfg{RCS}{ExtOption} -q -kb %FILENAME|F%";
# **COMMAND**
# %USERNAME|S% will be expanded to the username
# %COMMENT|U% will be expanded to the comment
$cfg{RCS}{ciCmd} =
    "$cfg{RCS}{BinDir}/ci $cfg{RCS}{ExtOption} -q -m%COMMENT|U% -t-none -w%USERNAME|S% -u %FILENAME|F%";
# **COMMAND**
# %DATE|D% will be expanded to the date
$cfg{RCS}{ciDateCmd} =
    "$cfg{RCS}{BinDir}/ci $cfg{RCS}{ExtOption} -q -m%COMMENT|U% -t-none -d%DATE|D% -u -w%USERNAME|S% %FILENAME|F%",
# **COMMAND**
# %REVISION|N% will be expanded to the revision number
$cfg{RCS}{coCmd} =
    "$cfg{RCS}{BinDir}/co $cfg{RCS}{ExtOption} -q -p%REVISION|N% -ko %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{histCmd} =
    "$cfg{RCS}{BinDir}/rlog $cfg{RCS}{ExtOption} -h %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{infoCmd} =
    "$cfg{RCS}{BinDir}/rlog $cfg{RCS}{ExtOption} -r%REVISION|N% %FILENAME|F%";
# **COMMAND**
# %REVISIONn|N% will be expanded to the revision number
# %CONTEXT|N% will be expanded to the number of lines of context
$cfg{RCS}{rlogDateCmd} =
    "$cfg{RCS}{BinDir}/rlog $cfg{RCS}{ExtOption} -d%DATE|D% %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{diffCmd} =
    "$cfg{RCS}{BinDir}/rcsdiff $cfg{RCS}{ExtOption} -q -w -B -r%REVISION1|N% -r%REVISION2|N% -ko --unified=%CONTEXT|N% %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{lockCmd} =
    "$cfg{RCS}{BinDir}/rcs $cfg{RCS}{ExtOption} -q -l %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{unlockCmd} =
    "$cfg{RCS}{BinDir}/rcs $cfg{RCS}{ExtOption} -q -u %FILENAME|F%";
# **COMMAND**
$cfg{RCS}{delRevCmd} =
    "$cfg{RCS}{BinDir}/rcs $cfg{RCS}{ExtOption} -q -o%REVISION|N% %FILENAME|F%";

######## Mail and Proxies #########################################
# **STRING 20**
# Name of topic in each web that has notification registrations.
# <strong>If you change this setting you will have to
# use TWiki to manually rename the topic in all existing webs</strong>
$cfg{NotifyTopicName}     = 'WebNotify';

# **BOOLEAN**
# Remove IMG tags in notification mails.
$cfg{RemoveImgInMailnotify} = $TRUE;

# **COMMAND**
# Mail program. If Net::SMTP is installed, it will be used in preference.
# Otherwise this needs to be a command-line program that accepts
# MIME format mail messages on standard input, and mails them.
$cfg{MailProgram} = '/usr/sbin/sendmail -t -oi -oeq';

# **STRING 30**
# Mail host for outgoing mail. This is only used if Net::SMTP is installed.
# Examples: mail.your.company
# <strong>CAUTION</strong> This setting can be overridden by a setting of SMTPMAILHOST
# in TWikiPreferences. Make sure you delete that setting if you are using a
# TWikiPreferences topic from a previous release of TWiki.
$cfg{SMTP}{MAILHOST} = '';

# **STRING 30**
# Mail domain sending mail, required if you are using Net::SMTP. SMTP
# requires that you identify the server sending mail. If not set, 
# Net::SMTP will guess it for you. Example: twiki.your.company.
# <strong>CAUTION</strong> This setting can be overridden by a setting of SMTPSENDERHOST
# in TWikiPreferences. Make sure you delete that setting if you are using a
# TWikiPreferences topic from a previous release of TWiki.
$cfg{SMTP}{SENDERHOST} = '';

# **STRING 30**
# Some environments require outbound HTTP traffic to go through a proxy
# server. (e.g. proxy.your.company).
# <strong>CAUTION</strong> This setting can be overridden by a PROXYHOST setting
# in TWikiPreferences. Make sure you delete the setting from there if
# you are using a TWikiPreferences topic from a previous release of TWiki.
$cfg{PROXY}{HOST} = '';

# **STRING 30**
# Some environments require outbound HTTP traffic to go through a proxy
# server. Set the port number here (e.g: 8080).
# <strong>CAUTION</strong> This setting can be overridden by a PROXYPORT setting
# in TWikiPreferences. Make sure you delete the setting from there if you
# are using a TWikiPreferences topic from a previous release of TWiki.
$cfg{PROXY}{HOST} = '';

######## Miscellaneous settings ######################################

# **STRING 20**
# Guest user's login name (guest)
$cfg{DefaultUserLogin} = 'guest';

# **STRING 20**
# Guest user's wiki name (TWikiGuest)
$cfg{DefaultUserWikiName} = 'TWikiGuest';

# **STRING 50**
# Set to enable experimental mirror-site support. If this name is
# different to MIRRORSITENAME, then this TWiki is assumed to be a
# mirror of another. You are <strong>highly</strong> recommended not to dabble with
# this experimental, undocumented feature!
$cfg{SiteWebTopicName} = '';

# **STRING 20**
# Name of the web where docs and site level preferences are held. If you
# change this setting, you must make sure the web exists and contains
# appropriate content, and upgrade scripts may no longer work (i.e. don't
# change it unless you are certain that you know what you are doing!)
$cfg{SystemWebName} = 'TWiki';

# **STRING 20**
# Name of the web used as a trashcan (where deleted topics are moved)
# If you change this setting, you must make sure the web exists.
$cfg{TrashWebName} = 'Trash';

# **STRING 20**
# Name of site-level preferences topic in the system web
# <strong>If you change this setting you will have to
# use TWiki to manually rename the existing topic.</strong>
$cfg{SitePrefsTopicName} = 'TWikiPreferences';

# **STRING 20**
# Name of the web where usertopics are stored. If you
# change this setting, you must make sure the web exists and contains
# appropriate content, and upgrade scripts may no longer work (i.e. don't
# change it unless you are certain that you know what you are doing!)
$cfg{UsersWebName} = 'Main';

# **STRING 20**
# Name of main topic in a web.
# <strong>If you change this setting you will have to
# use TWiki to manually rename the topic in all existing webs</strong>
$cfg{HomeTopicName} = 'WebHome';

# **STRING 20**
# Name of preferences topic in a web.
# <strong>If you change this setting you will have to
# use TWiki to manually rename the topic in all existing webs</strong>
$cfg{WebPrefsTopicName} = 'WebPreferences';

# **STRING 20**
# Name of statistics topic
$cfg{Stats}{TopicName} = 'WebStatistics';

# **NUMBER**
# Number of top viewed topics to show in statistics topic
$cfg{Stats}{TopViews} = 10;

# **NUMBER**
# Number of top contributors to show in statistics topic
$cfg{Stats}{TopContrib} = 10;

# **NUMBER**
# How many links to other revisions to show, 0 for all
$cfg{NumberOfRevisions} = 4;

# **NUMBER**
# If this is set to a > 0 value, and the revision control system
# supports it (RCS does), then if a second edit of the same topic
# is done by the same user within this number of seconds, a new
# revision of the topic will NOT be created (the top revision will
# be replaced).
$cfg{ReplaceIfEditedAgainWithin} = 3600;

# **NUMBER**
# When a topic is edited, the user takes a "lease" on that topic.
# If another user tries to also edit the topic while the lease
# is still active, they will get a warning. The warning text will
# be different depending on whether the lease has "expired" or
# not i.e. if it was taken out more than LeaseLength seconds ago.
$cfg{LeaseLength} = 3600;

# **BOOLEAN**
# Change non-existant plural topic name to singular,
# e.g. TestPolicies to TestPolicy.
$cfg{PluralToSingular} = $TRUE;

# **BOOLEAN**
# Disable <strong>all</strong> plugins. You can selectively disable specific
# plugins from TWikiPreferences.
$cfg{DisableAllPlugins} = $FALSE;

# **PATH**
# Pathname to file that maps file suffixes to MIME types :
# For Apache server set this to Apache's mime.types file pathname,
# for example /etc/httpd/mime.types, or use the default shipped in
# the TWiki data directory.
$cfg{MimeTypesFileName} = "$cfg{DataDir}/mime.types";

# **PATH**
# Directory where registration approvals are held. Should be somewhere
# that is not browsable from the web.
$cfg{RegistrationApprovals} = "$cfg{DataDir}/RegistrationApprovals";

# **BOOLEAN**
# If set, this will cause TWiki to treat warnings as errors that will
# cause TWiki to die. Provided for use by Plugin and Skin developers,
# who should develop with it switched on.
$cfg{WarningsAreErrors} = $FALSE;

1;
