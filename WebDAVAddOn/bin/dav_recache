#!/usr/bin/perl -w
#
# Copyright (C) 2004 Wind River Systems Inc.
#
# For licensing info read license.txt file in the TWiki root.
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details, published at 
# http://www.gnu.org/copyleft/gpl.html

BEGIN {
    # Set default current working directory (needed for mod_perl)
    if( $ENV{"SCRIPT_FILENAME"} &&
		$ENV{"SCRIPT_FILENAME"} =~ /^(.+)\/[^\/]+$/ ) {
	  chdir $1;
	} elsif ( $0 =~ /^(.*)\/.*?$/ ) {
	  chdir $1;
	}
    # Set library paths in @INC, at compile time
    unshift @INC, '.';
    require 'setlib.cfg';
}

# Refresh the content of the TWiki protections cache.
# Deleting the cache first is a valid thing to do.

use strict;
use TWiki;
use TWiki::Plugins::WebDAVPlugin::Permissions;

my $topic = "";
my $web;
my $thePathInfo;
my $theRemoteUser;
my $theTopic;
my $theUrl;
my $query;
my $chosenWeb;
my $chosenTopic;
my $fromBrowser = 0;

if( $ENV{'DOCUMENT_ROOT'} ) {
  # Called from browser.
  # CODE_SMELL: Is this really a reliable way of detecting
  # a browser environment?
  use CGI;
  $query = new CGI;
  $thePathInfo = $query->path_info() || ""; 
  $theRemoteUser = $query->remote_user() || "";
  $theTopic = $query->param( 'topic' ) || "";
  $theUrl = $query->url;
  $fromBrowser = 1;
  $chosenWeb = $query->param( "web" );
  $chosenTopic = $query->param( "topic" );
  print "Content-type: test/plain\n\n";
} else {
  # Called from the command line
  $chosenWeb = $ARGV[$#ARGV];
  if ( $chosenWeb && $chosenWeb =~ m/(.*)[\.\/\\](.*)/o ) {
	( $chosenWeb, $chosenTopic ) = ( $1, $2 );
  }
  $thePathInfo = "/Main";
  $thePathInfo = "/$chosenWeb" if ( $chosenWeb );
  $thePathInfo .= "/$chosenTopic" if ( $chosenWeb && $chosenTopic );
  $theRemoteUser = "nobody";
}

( $topic, $web ) =
  TWiki::initialize( $thePathInfo, $theRemoteUser,
					 $theTopic, $theUrl, $query );

my $pdb = TWiki::Prefs::getPreferencesValue("WEBDAVPLUGIN_LOCK_DB");
my $permDB = new WebDAVPlugin::Permissions( $pdb );

if ( !defined( $chosenWeb ) && -w "$pdb/TWiki" ) {
  unlink "$pdb/TWiki";
}
$permDB->recache( $chosenWeb, $chosenTopic );
