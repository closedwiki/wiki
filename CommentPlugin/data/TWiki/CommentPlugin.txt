---+!! Comment Plugin

This plugin allows users to quickly post comments to a page without an edit/preview/save cycle. 

_( Discussion in TWiki:Plugins/CommentPluginDev )_

%TOC%
---+ Features

Inserts an edit box into the page that allows users to type in and save comments. Comments can be made:
	* in different formats (as defined by a template). 
	* in both forward and reverse chronological order.  
	* signed or unsigned, dated or undated (as defined by a template).
	* In other topics, or other positions within the current topic, as specified by a standard TWiki anchor.

---+ Syntax Rules

Write the command =%<nop>COMMENT{= _attributes_ =}%= anywhere in a TWiki topic.

Only three attributes are [[#MoreAttrs][recognised]]
	| *Name* | *Description* |
	| =target= | (Optional) Name of the topic to add the comment to. Defaults to the current topic. |
	| =type= | This is the name of the template to use for this comment. Comment templates are defined in a TWiki template - see [[#TemPlates][Customisation]], below. If this attribute is not defined, the type is whatever is defined by COMMENTPLUGIN_DEFAULT_TYPE, either in this topic or in your WebPreferences. By default this is 'bottom'. |
	| =location= | (Optional) Regular expression specifying the comment location in the target topic. Read _carefully_ below! |

---++ Locating the comment
=%COMMENT= supports several ways to specify _where_ a comment should be inserted in the target topic. This is referred to as the _location_ of the comment.

The default _location_ is the =%COMMENT= tag itself. For example:
<verbatim>
%COMMENT{type="below"}%
</verbatim>
will add comments in the current topic, directly below the COMMENT tag.

The =target= attribute may specify a web, and may also specify an anchor within the target topic; for example, 
<verbatim>
%COMMENT{type="above" target="%MAINWEB%.PersonalRemarks#InsertHere"}%
</verbatim>
This uses a standard TWiki in-topic anchor as the insertion location. See %TWIKIWEB%.TextFormattingRules for more about TWiki anchors.

Getting more sophisticated, you can also specify a regular expression for the target location using the =location+ parameter. The regular expression is searched for in the target topic, and the comment inserted relative to the string that the RE matched. For example,
<verbatim>
%COMMENT{type="above" location="Flights of Fancy"}%
</verbatim>
will place comments above the first occurence of the string =Flights of Fancy" in the current topic. *Warning* of course, if a user's comment contains the string "Flights of Fancy" they will and up _changing the location_ for the next comment, so be careful how you specify locations! The RE is matched using perl "multiple line" mode, so ^ and $ match the start of a line and the end of a line respectively.

If you specify an anchor _and_ a =location_, the anchor will be ignored.

--++ Default templates
A set of default comment templates are shipped with the plugin. These are:
| *Template type* | *Description* |
| =top= | Comments, signed and dated, added at top of the topic (the anchor is ignored) |
| =bottom= | Comments, signed and dated, added at end of the target topic (the anchor is ignored) |
| =above= | Comments, signed and dated, added immediately before the target anchor, or the =%COMMENT= if no anchor is specified |
| =below= | Comments, signed and dated, added immediately below the target anchor, or the =%COMMENT= if no anchor is specified |
| =tableprepend= | Comments, signed and dated, formatted as an HTML table row, added below the anchor (which must be in an HTML &lt;table>) |
| =tableappend= | Comments, signed and dated, formatted as an HTML table row, added above the anchor (which must be in an HTML &lt;table)) |

*Note* that the =above= and =below= templates normally place comments relative to the anchor specified in the %COMMENT. If specified, the anchor *must* exist in the target topic, or the comment will be ignored. If no anchor is specified in the %COMMENT, and the comment is being posted to the current topic, the comment will be placed relative to the %COMMENT. If no anchor is defined, and the comment is being posted to another topic, it is *undefined* where the comments will end up!

Your local installation may add more template types as well - see 'Customisation', below.

*Note* that if the =target= parameter is used, and the %<nop>WEB% and %<nop>TOPIC% parameters are referred to in the template, they will be expanded to the web/topic where the *%COMMENT* was seen, not the web/topic of the target.

#TemPlates
---+ Customisation
Customisation of the comment plugin requires write access to the templates directory and some familiarity with the TWiki templating language. See %TWIKIWEB%.TWikiTemplates for more information.

The plugin picks up its templates from a standard TWiki template file. This allows different templates to be defined for different TWiki skins.

To define a comment type, you have to provide three simple template definitions in the template file; one for the prompt box, one for the generated output, and one to indicate where in the file to put the generated output. If we have a template type "mytype", these are named "PROMPTmytype" and "OUTPUTmytype" respectively. See 'comments.tmpl' in the templates directory for examples.

The PROMPT definition defines the contents of an HTML form that is used to capture the comment. Parameters to the comment generator are defined using standard HTML input fields, such as =input=, =textarea= and =select=. The user enters values for these parameters that are then available when the OUTPUT template is expanded, in the form of %<nop>URLPARAM%s.

#MoreAttrs
If an attribute is given to the %COMMENT that is not one of the standard attributes, then that attribute is taken as the name of a parameter to the PROMPT template. Expressions in the template of the form <code>%</code><i>param</i><code>|</code><i>default</i><code>%</code> (e.g. <code>%rows|3%</code>, <code>%button|Push me%</code>) are expanded to the values given in the %COMMENT. For example, if the PROMPT template 'example' contains:
<pre>
&lt;textarea rows=%rows|3 cols="%cols|50%">
</pre>
and the %COMMENT tag is:
<pre>
%<nop>COMMENT{type="example" rows="5"}%
</pre>
then the template will be expanded as
<pre>
&lt;textarea rows=5 cols="50">
</pre>

As well as all the usual support for variables in templates, the following special variables are supported in the PROMPT definition:
    | *Variable* | *Description* |
    | =%<nop>MESSAGE%= | A helpful generated message, either a lock message or a reminder to refresh. |
    | =%<nop>DISABLED%= | Set to 'disabled' when you cannot comment (see [[#HandlingPageLock][Important Note regarding Locks]], below). |

The OUTPUT template definition defines the format for the text that actually gets embedded into the topic. There are four position tags that are used to indicate where in the file the comment should be placed:

    | =%<nop>POS:TOP%= | If present, comments will be inserted at the top of the topic |
    | =%<nop>POS:BOTTOM%= | If present, comments will be inserted at the end of the topic |
    | =%<nop>POS:BEFORE%= | If present, comments will be inserted *immediately before* the =%<nop>COMMENT%= tag |
    | =%<nop>POS:AFTER%= | If present, comments will be inserted *immediately after* the =%<nop>COMMENT%= tag |
Note that these position tags are obviously mutually exclusive. If you define more than one, the result is undefined. If none is present, the default is =%<nop>POS_BOTTOM%=.

Note that TWiki variables in the OUTPUT definition get expanded when the comment is inserted in the text; so time, date and username will refer to the time and date the comment was made and the user who made it.

#HandlingPageLock
---+ Important Note regarding Locks

The plugin checks if the page is locked for edit. When a locked page is displayed in 'view' mode, comment input is automatically disabled.

Note that if the page was read long time ago, it's possible that page was locked by another user *after* it was read, and the lock is still outstanding. In this case, comments cannot be saved, and you will be redirected to a "topic is locked" page. You then have two options:
	* *Cancel* - throw away your comment and return to viewing the page.
	* *Back* - *WARNING* some browsers might requery the page and *lose* your comments - so test how your browser behaves before using the Back button.

To help avoid edit conflict, a reminder to refresh the page before entering comments is the default text for a =%COMMENT=

---+ TWO WARNINGS

	* *WARNING 1*: Anyone can refactor text added via comments, just like any other page.  CommentPlugin knows nothing about what you've done once you have posted your comments.
	* *WARNING 2*: to template authors. When you write templates, always ensure that the expansion of URLs cannot result in TWiki content (such as Set statements) that could compromise the security of your site. The default templates are written so that it's impossible to embed Set statements using them.

---+ Settings

	* Description:
		* Set SHORTDESCRIPTION = Allows users to quickly post comments to a page without edit/preview/save cycle.
	* "please refresh" message to help prevent edit conflict
		* Set REFRESH = Remember to refresh before you comment
	* templates
		* Set TEMPLATES = comments
	* default template type
		* Set DEFAULT_TYPE = below
		
---+ Plugin Installation Instructions

	* Download the ZIP file from the Plugin web (see below)
	* Unzip ==%TOPIC%.zip== in your twiki installation directory. Content:
	| *File:* | *Description:* |
	| ==data/TWiki/CommentPlugin.txt== | Plugin doc page (this page) |
	| ==templates/comments.tmpl== | Comment templates |
	| ==lib/TWiki/Plugins/CommentPlugin.pm== | Plugin Perl module |
	| ==lib/TWiki/Plugins/CommentPlugin/Comment.pm== | Plugin Perl module |
	| ==lib/TWiki/Plugins/CommentPlugin/Attrs.pm== | Plugin Perl module |
	| ==lib/TWiki/Plugins/CommentPlugin/test.zip== | Tests |
	| ==lib/TWiki/Plugins/CommentPlugin/build.xml== | Ant build file |

If installed correctly, you should see a some =%COMMENT= edit boxes below here.

---
%COMMENT{type="top" target="Trash.Comments"}%
---
%COMMENT{type="bottom" target="Trash.Comments"}%
----

---+ Known problems
---++ Use of unpublished functions and variables
The plugin uses the following unpublished TWiki variables:
<verbatim>
$TWiki::webNameRegex
$TWiki::anchorRegex
</verbatim>

---+ Plugin Info

|  Plugin Author: | v1.0 TWiki:Main/DavidWeller v2.0 TWiki:Main/PeterMasiar v3.0 TWiki:Main/CrawfordCurrie |
|  Plugin Version: | 3.0 |
|  Change History: | 30 Nov 2001: Initial version |
| | 4 Dec 2001: 1.01 release, changed name to CommentPlugin, added $button var, changed textarea WRAP setting to "soft" |
| | 24 Feb 2002 added a few more user requests, made "English" text configurable |
| | 5 March 2002  Bug fixes, Jon Lambert created oopslockedcomments.tmpl template |
| | 15 July 2003: Peter Masiar added "reminder" parameter and feature to pass comments to oopslockedcomments.tmpl template to copy-paste later |
| | 23 Sep 2003 Peter Masiar: 80% rewrite/refactor, adding templates |
| | 7 Feb 2004: Crawford Currie: rewrote this page and CommentTemplates in an effort to make the plugin more user friendly. Added {TIME} variable. Also updated CVS. |
| | 18 Feb 2004: Crawford Currie: rewrote for standard templates and other user requests. Recognition to Patrice Fournier and Sam Abrams for terrific testing and patch support. |
|  CPAN Dependencies: | None |
|  Other Dependencies: | None |
|  Perl Version: | 5.0 |
|  Plugin Home: | TWiki:Plugins/%TOPIC% |
|  Feedback: | TWiki:Plugins/%TOPIC%Dev |

__Related Topics:__ %TWIKIWEB%.TWikiPreferences, %TWIKIWEB%.TWikiPlugins

-- TWiki:Main/DavidWeller - 05 Mar 2002 <br>
-- TWiki:Main/PeterMasiar - 15 Jul 2003, 23 Sep 2003<br>
-- TWiki:Main/CrawfordCurrie - 18 Feb 2004
