#!/usr/bin/perl -wT
#
# TWiki WikiClone (see wiki.pm for $wikiversion and other info)
#
# Copyright (C) 1999-2001 Peter Thoeny, peter@thoeny.com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details, published at 
# http://www.gnu.org/copyleft/gpl.html

use CGI::Carp qw( fatalsToBrowser );
use CGI;
use lib ( '.' );
use lib ( '../lib' );
use TWiki;

$query = new CGI;

#open(STDERR,'>&STDOUT'); # redirect error to browser
$| = 1;                  # no buffering

&main();


# =========================
sub getAttachAttr
{
    my( $atext, $fileName ) = @_;
    my $filePath="", $fileSize="", $fileDate="", $fileUser="", $fileComment="";
    my $before="", $item="", $after="", $set="";

    foreach( split( /<TwkNextItem>/, $atext ) ) {
        $set = $_;
        ( $before, $item, $after ) = split( /<(?:\/)*TwkFileName>/, $set );
        if( ( $item ) && ( $item eq $fileName ) ) {
            ( $before, $filePath,    $after ) = split( /<(?:\/)*TwkFilePath>/, $set );
            if( ! $filePath ) { $filePath = ""; }
            $filePath =~ s/<TwkData value="(.*)">//go;
            if( $1 ) { $filePath = $1; } else { $filePath = ""; }
            $filePath =~ s/\%NOP\%//goi;   # delete placeholder that prevents WikiLinks
            ( $before, $fileSize,    $after ) = split( /<(?:\/)*TwkFileSize>/, $set );
            if( ! $fileSize ) { $fileSize = "0"; }
            ( $before, $fileDate,    $after ) = split( /<(?:\/)*TwkFileDate>/, $set );
            if( ! $fileDate ) { $fileDate = ""; }
            ( $before, $fileUser,    $after ) = split( /<(?:\/)*TwkFileUser>/, $set );
            if( ! $fileUser ) { $fileUser = ""; }
            $fileUser =~ s/ //go;
            ( $before, $fileComment, $after ) = split( /<(?:\/)*TwkFileComment>/, $set );
            if( ! $fileComment ) { $fileComment = ""; }

            return ( $filePath, $fileSize, $fileDate, $fileUser, $fileComment );
        }
    }

    return ( $filePath, $fileSize, $fileDate, $fileUser, $fileComment );
}


# =========================
sub listVersions
{
    my( $web, $topic, $attachment ) = @_;

    &TWiki::writeDebug( "Att = $attachment" );
    my $latestRev = TWiki::Store::getRevisionNumberNew( $web, $topic, $attachment );
    &TWiki::writeDebug( "latestRev = $latestRev" );
    $latestRev =~ /\.(.*)/;
    my $maxRevNum = $1;
    &TWiki::writeDebug( "max = $maxRevNum" );
    my $verTable = &TWiki::Store::readTemplate( "attachvertable" );
    my( $verTableBefore, $verTableItem, $verTableAfter ) = split( /%REPEAT%/, $verTable );

    my $before="", $item="", $lcItem="", $after="", $set="", $ins="", $comp="";

    my $result = $verTableBefore;
    my $found = 0;

    for( $version = $maxRevNum; $version >= 1; $version-- ) {
        $ins = $verTableItem;
        my $rev = "1.$version";
        $ins =~ s/%FILEVERSION%/$rev/go;
        my $changeToIsoDate = 0;
        my( $date, $userName ) = 
           TWiki::Store::getRevisionInfoNew( $topic, $rev, $changeToIsoDate, $web, $attachment );
        my $wikiUserName = &TWiki::userToWikiName( $userName );
        $ins =~ s/%VERSIONDATE%/$date/go;
        $ins =~ s/%VERSIONUPDATER%/$wikiUserName/go;
        $result = "$result$ins";
        #&TWiki::writeDebug( "Ver = $version, res=$result" );
    }

    $result = "$result$atTableAfter";
    return $result;
}


# =========================
sub main
{
    my $thePathInfo = $query->path_info(); 
    my $theRemoteUser = $query->remote_user();
    my $theTopic = $query->param( 'topic' );
    my $theUrl = $query->url;
    my $action = 1; # !!! do I need action and revInfo?
    my $revInfo = $query->param( 'revInfo' ) || "";
    if( $revInfo ) {
       $action = 0;
    }
    
    ( $topic, $webName, $dummy, $userName ) = 
        &TWiki::initialize( $thePathInfo, $theRemoteUser, $theTopic, $theUrl );
    $dummy = "";  # to suppress warning

    my $tmpl = "";
    my $text = "";
    my $atext = "";
    my $fileName = "";
    my $wikiUserName = &TWiki::userToWikiName( $userName );

    if( ! &TWiki::Store::webExists( $webName ) ) {
        $tmpl= &TWiki::Store::readTemplate( "noweb" );
        $tmpl = &TWiki::handleCommonTags( $tmpl, $topic );
        print "Content-type: text/html\n\n";
        print $tmpl;
        return;
    }

    # check access permission
    if( ! &TWiki::Access::checkAccessPermission( "change", $wikiUserName, "", $topic, $webName ) ) {
        my $url = &TWiki::getOopsUrl( $webName, $topic, "oopsaccesschange" );
        print $query->redirect( $url );
        return;
    }

    $fileName = $query->param( 'filename' ) || "";

    if( &TWiki::Store::topicExists( $webName, $topic ) ) {
        $text = &TWiki::Store::readTopic( $topic );
        # extract attachment section
        my $before="", $after="";
        ( $before, $atext, $after ) = split( /<!--TWikiAttachment-->/, $text );
        if( ! $atext ) { $atext = ""; }
    }
    # get filePath and fileComment:
    my ( $filePath, $fileSize, $fileDate, $fileUser, $fileComment ) 
      = getAttachAttr( $atext, $fileName );

    # !!! temp to block table at top of page
    if( ! $action ) { $atext = listVersions( $webName, $topic, $fileName ); }


    # !!! why log attach before post is called?
    # FIXME: Move down, log only if successful (or with error msg?)
    if( $TWiki::doLogTopicAttach && $action ) {
        # write log entry
        &TWiki::Store::writeLog( "attach", "$webName.$topic", $fileName );
    }

    # get view template, standard view or a view with a different skin
    my $skin = $query->param( "skin" ) || &TWiki::Prefs::getPreferencesValue( "SKIN" );
    $tmpl = &TWiki::Store::readTemplate( "attach", "", $skin );
    $tmpl = &TWiki::handleCommonTags( $tmpl, $topic );
    $atext = &TWiki::getRenderedVersion( $atext );
    $atext = &TWiki::handleCommonTags( $atext, $topic );
    $tmpl =~ s/%ATTACHTABLE%/$atext/go;
    if( $fileName ) {
        $tmpl =~ s/%FILENAME%/$fileName/go;
        $tmpl =~ s/%ACTION%/Update file:/go;
        $tmpl =~ s/%PREVIOUS%/Previous <br> upload:/go;
        $fileUser = &TWiki::getRenderedVersion( $fileUser );
        $fileUser =~ s/\n//go;
        $tmpl =~ s/%FILEUSER%/\($fileUser\)/go;
    } else {
        $tmpl =~ s/%FILENAME%//go;
        $tmpl =~ s/%ACTION%/Attach new file/go;
        $tmpl =~ s/%PREVIOUS%//go;
        $tmpl =~ s/%FILEUSER%/$fileUser/go;
    }
    $tmpl =~ s/%FILEPATH%/$filePath/go;
    $tmpl =~ s/%FILECOMMENT%/$fileComment/go;
    print "Content-type: text/html\n\n";
    print $tmpl;
}

# EOF
