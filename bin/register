#!/usr/bin/perl -wT -I.
#
# TWiki WikiClone (see $wikiversion in wiki.pm for version)
#
# Copyright (C) 1999 Peter Thoeny, peter.thoeny@ibm.net
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details, published at 
# http://www.gnu.ai.mit.edu/copyleft/gpl.html 

use CGI;
use wiki;

$query = new CGI;

##### for debug only: Remove next 3 comments (but redirect does not work)
#open(STDERR,'>&STDOUT'); # redirect error to browser
#$| = 1;                  # no buffering
#print "Content-type: text/html\n\n";

&main();

sub main
{
    # get all parameters from the form
    my @paramNames = $query->param();
    my @formDataName = ();
    my @formDataValue = ();
    my @formDataRequired = ();
    my $name = "";
    my $value = "";
    my $emailAddress = "";
    my $firstLastName = "";
    my $wikiName = "";
    my $remoteUser = "";
    my $passwordA = "";
    my $passwordB = "";
    foreach( @paramNames ) {
        if( /^(Twk)([0-9])(.*)/ ) {
            $value = $query->param( "$1$2$3" );
            $formDataRequired[@formDataRequired] = $2;
            $name = $3;
            $name =~ s/([a-z0-9])([A-Z0-9])/$1 $2/go;
            $formDataName[@formDataName] = $name;
            $formDataValue[@formDataValue] = $value;
            if( $name eq "Name" ) {
                $firstLastName = $value;
            } elsif( $name eq "Wiki Name" ) {
                $wikiName = $value;
            } elsif( $name eq "Login Name" ) {
                $remoteUser = $value;
            } elsif( $name eq "Email" ) {
                $emailAddress = $value;
            } elsif( $name eq "Password" ) {
                $passwordA = $value;
            } elsif( $name eq "Confirm" ) {
                $passwordB = $value;
            }
        }
    }
    my $formLen = @formDataValue;

    my $topicName = $query->param( 'TopicName' );
    my $thePathInfo = $query->path_info(); 
    my $theUrl = $query->url;
    ( $topic, $webName ) = 
	&wiki::initialize( $thePathInfo, $wikiName, $topicName, $theUrl );

    my $text = "";
    my $url = "";

    # check if user entry already exists
    if(  ( $wikiName ) 
      && (  ( &wiki::topicExists( $webName,  $wikiName ) )
         || ( htpasswdExistUser( $wikiName ) ) 
         ) ) {
        # PTh 20 Jun 2000: changed to getOopsUrl
        $url = &wiki::getOopsUrl( $webName, $topic, "oopsregexist", $wikiName );
        print $query->redirect( $url );
        return;
    }

    # check if required fields are filled in
    my $x;
    for( $x = 0; $x < $formLen; $x++ ) {
        if( ( $formDataRequired[$x] ) && ( ! $formDataValue[$x] ) ) {
            $url = &wiki::getOopsUrl( $webName, $topic, "oopsregrequ", );
            print $query->redirect( $url );
            return;
        }
    }

    # check if wikiName is a WikiName
    if( ! &wiki::isWikiName( $wikiName ) ) {
        $url = &wiki::getOopsUrl( $webName, $topic, "oopsregwiki" );
        print $query->redirect( $url );
        return;
    }
    # a WikiName is safe, so untaint variable
    $wikiName =~ /(.*)/;
    $wikiName = $1;

    # check if passwords are identical
    if( $passwordA ne $passwordB ) {
        $url = &wiki::getOopsUrl( $webName, $topic, "oopsregpasswd" );
        print $query->redirect( $url );
        return;
    }

    # everything OK

    # generate user entry and add to .htpasswd file
    if( ! $remoteUser ) {
        htpasswdAddUser( htpasswdGeneratePasswd( $wikiName, $passwordA ) );
    }

    # send email confirmation
    $text = &wiki::readTemplate( "registernotify" );
    $text =~ s/%FIRSTLASTNAME%/$firstLastName/go;
    $text =~ s/%WIKINAME%/$wikiName/go;
    $text =~ s/%EMAILADDRESS%/$emailAddress/go;
    ( $before, $after) = split( /%FORMDATA%/, $text );
    for( $x = 0; $x < $formLen; $x++ ) {
        if( $formDataName[$x] ne "Confirm" ) {
            $before .= "   * $formDataName[$x]\: $formDataValue[$x]\n";
        }
    }
    $text = "$before$after";
    $text = &wiki::handleCommonTags( $text, $wikiName );
    &wiki::sendEmail( $text );

    # create user topic if not exist
    if( ! &wiki::topicExists( $wiki::mainWebname, $wikiName ) ) {
        $text = &wiki::readTemplate( "register" );
        ( $before, $after) = split( /%FORMDATA%/, $text );
        for( $x = 0; $x < $formLen; $x++ ) {
            $name = $formDataName[$x];
            $value = $formDataValue[$x];
            $value =~ s/[\n\r]/ /go;
            if( ! (    ( $name eq "Wiki Name" )
                    || ( $name eq "Password" )
                    || ( $name eq "Confirm" ) ) ) {
                $before .= "   * $name\: $value\n";
            }
        }
        $text = "$before$after";
        $text =~ s/ {3}/\t/go;
        &wiki::saveTopic( $wikiName, $text, "" );
    }

    # add user to TWikiUsers topic
    my $userTopic = addUserToTWikiUsersTopic( $wikiName, $remoteUser );

    # write log entry
    if( $wiki::doLogRegistration ) {
        &wiki::writeLog( "register", "$webName.$userTopic", $emailAddress, $wikiName );
    }

    # and finally display thank you page
    $url = &wiki::getOopsUrl( $webName, $wikiName, "oopsregthanks", $emailAddress );
    print $query->redirect( $url );
}

sub htpasswdGeneratePasswd
{
    my ( $user, $passwd ) = @_;
    # by David Levy, Internet Channel, 1997
    # found at http://world.inch.com/Scripts/htpasswd.pl.html
    srand( $$|time );
    my @saltchars = ( 'a'..'z', 'A'..'Z', '0'..'9', '.', '/' );
    my $salt = $saltchars[ int( rand( $#saltchars+1 ) ) ];
    $salt .= $saltchars[ int( rand( $#saltchars+1 ) ) ];
    my $passwdcrypt = crypt( $passwd, $salt );
    return "$user\:$passwdcrypt";
}

sub htpasswdExistUser
{
    my ( $user ) = @_;

    if( ! $user ) {
        return "";
    }

    my $text = &wiki::readFile( $wiki::htpasswdFilename );
    if( $text =~ /$user\:/go ) {
        return "1";
    }
    return "";
}

sub htpasswdAddUser
{
    my ( $userEntry ) = @_;

    # can't use `htpasswd $wikiName` because htpasswd doesn't understand stdin
    # simply add name to file, but this is a security issue
    my $text = &wiki::readFile( $wiki::htpasswdFilename );
    $text .= "$userEntry\n";
    &wiki::saveFile( $wiki::htpasswdFilename, $text );
}

sub addUserToTWikiUsersTopic
{
    my ( $wikiName, $remoteUser ) = @_;
    my $today = &wiki::getLocaldate();
    my $topicName = $wiki::userListFilename;
    $topicName =~ s/(.*[^\/])\/([a-zA-Z0-9]*)\.txt$/$2/go;
    my $text  = &wiki::readTopic( $topicName );
    my $result = "";
    my $status = "0";
    my $line = "";
    my $name = "";
    my $isList = "";
    # add name alphabetically to list
    foreach( split( /\n/, $text) ) {
        $line = $_;
        $isList = ( $line =~ /^\t\*\s[A-Z][a-zA-Z0-9]*\s\-/go );
        if( ( $status == "0" ) && ( $isList ) ) {
            $status = "1";
        }
        if( $status == "1" ) {
            if( $isList ) {
                $name = $line;
                $name =~ s/(\t\*\s)([A-Z][a-zA-Z0-9]*)\s\-.*/$2/go;            
                if( $wikiName eq $name ) {
                    # name is already there, do nothing
                    return $topicName;
                } elsif( $wikiName lt $name ) {
                    # found alphabetical position
                    if( $remoteUser ) {
                        $result .= "\t* $wikiName - $remoteUser - $today\n";
                    } else {
                        $result .= "\t* $wikiName - $today\n";
                    }
                    $status = "2";
                }
            } else {
                # is last entry
                if( $remoteUser ) {
                    $result .= "\t* $wikiName - $remoteUser - $today\n";
                } else {
                    $result .= "\t* $wikiName - $today\n";
                }
                $status = "2";
            }
        }

        $result .= "$line\n";
    }
    &wiki::saveTopic( $topicName, $result, "" );
    return $topicName;
}
