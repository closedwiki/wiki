#!/usr/bin/perl -wT
#
# TWiki Collaboration Platform, http://TWiki.org/
#
# Copyright (C) 1999-2004 Peter Thoeny, peter@thoeny.com
#           (C) 2001 Kevin Atkinson, kevin twiki at atkinson dhs org
#           (C) 2004 Martin Cleaver, Martin.Cleaver@BCS.org.uk
#
# For licensing info read license.txt file in the TWiki root.
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details, published at 
# http://www.gnu.org/copyleft/gpl.html

BEGIN {
    # Set default current working directory
    if( $ENV{"SCRIPT_FILENAME"} && $ENV{"SCRIPT_FILENAME"} =~ /^(.+)\/[^\/]+$/ ) {
        chdir $1;
    }
    # Set library paths in @INC at compile time
    unshift @INC, '.';
    require 'setlib.cfg';
}

# I18N: No locale settings necessary yet - only 7-bit ASCII due
# to Apache limitations on userids.

my $tempUserDir = $TWiki::pubDir."/TWiki/RegistrationApprovals"; # SMELL hacked name, and 
#stores in binary format!
my $sendActivationCode = 1;
my $needApproval = 1;

use strict;
use CGI::Carp qw(fatalsToBrowser);
use CGI;
use TWiki;
use TWiki::UI::Register;
use Storable; 

# Register -> Verify -> Approve -> Finish

my $query = new CGI;
# NB. bulkRegister is in ManageCgiScript.

my $action = $query->param('action');

if ($action eq 'register') {
	TWiki::UI::Register::register(
                                  query => $query,
                                  sendActivationCode => $sendActivationCode,
                                  tempUserDir => $tempUserDir
                                 );
    if (!$sendActivationCode) {
        die "Need to call verify automatically";
    }
} elsif ($action eq 'approve') {
    TWiki::UI::Register::finish(
                                query=>$query,
                                tempUserDir=>$tempUserDir
                               );
}
elsif ($action eq 'verify') {
    TWiki::UI::Register::verifyEmailAddress(
                                            query=>$query,
                                            tempUserDir=>$tempUserDir,
                                            needApproval=>$needApproval
                                           );
    #	if (! $needApproval) {
    #	    die "Need to call approve automatically";
    #	}
	TWiki::UI::Register::finish(
                                query=>$query,
                                tempUserDir=>$tempUserDir,
                                approve=>$query->param('code')
                               );
} elsif ($action eq 'resetPassword') { #TODO
    TWiki::UI::Register::resetPassword(
                                       query => $query
                                      );
} else {
	die "invalid action ($action) in register";
}


# Output of register:
#    UnsavedUser, accessible by username.$verificationCode

# Output of reset password:
#    unaffected user, accessible by username.$verificationCode

# Output of verify:
#    UnsavedUser, accessible by username.$approvalCode (only sent to administrator)

# Output of approve:
#    RegisteredUser, all related UnsavedUsers deleted

# EOF
