#!/usr/bin/perl -w
# Copyright 2004 Will Norris.  All Rights Reserved.
# License: GPL

use Data::Dumper qw( Dumper );

use CGI;

BEGIN {
    # Set default current working directory
    if( $ENV{"SCRIPT_FILENAME"} && $ENV{"SCRIPT_FILENAME"} =~ /^(.+)\/[^\/]+$/ ) {
        chdir $1;
    }
    # Set library paths in @INC at compile time
    unshift @INC, '.';
    require 'setlib.cfg';
}

use TWiki;
use TWiki::Func;

use Cwd qw( cwd );
use Archive::Tar;
#use IO::Zlib;

$| = 1;                  # no buffering

&main();

sub main
{
    my $error = '';

    my $query = CGI->new() or die $!;
    (my $webName = $query->path_info()) =~ s|^/?(.*)\.(tar)$|$1|;
    my $saveasweb = $query->param('saveasweb' ) || $webName;

    # check for Web existence
    unless ( TWiki::Func::webExists( $webName ) ) 
    {
	$error .= "web $webName doesn't exist\n";
    }

    if ( $error ) 
    {
    	print "Content-type: text/html\n\n";
	print $error;
	return;
    }
	
    # sets response header
    print $query->header(-type=>'application/x-tar', -expire=>'now');

    my $tar = Archive::Tar->new() or die $!;
    foreach my $dirEntry ( 
			   { dir => $TWiki::dataDir, name => 'data' },
			   { dir => $TWiki::pubDir, name => 'pub' },
			   { dir => $TWiki::templateDir, name => 'templates' },
			   )
    {
	next unless -d "$dirEntry->{dir}/$webName";
	my $pushd = cwd();
	chdir "$dirEntry->{dir}/$webName" or die $!;

	my @files = <* */*>;		# HACK: make true recursive thingee
	foreach my $file ( @files )
	{
	    next if -d $file;
	    local( $/, *FH ) ;
	    open( FH, $file ) or die $!;
	    my $contents = <FH>;
	    
	    $tar->add_data( "$dirEntry->{name}/$saveasweb/$file", $contents );
	}
	chdir $pushd;
    }

#    my $fh = IO::File->new( '| gzip -c -', 'w' ) or die $!;
#    my $fh = IO::File->new( '| cat -', 'w' ) or die $!;

    my $io = IO::Handle->new() or die $!;
    $io->fdopen(fileno(STDOUT), "w") or die $!;

#    my $ioz = IO::Zlib->new() or die $!;
#    $ioz->fdopen( $io, "w" ) or die $!;

    $tar->write( $io );

#    tie *STDOUT, 'IO::Zlib', "file.gz", "wb";
#    print $tar->write;
}
