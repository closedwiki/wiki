%META:TOPICINFO{author="TWikiContributor" date="1132858289" format="1.1" version="1.1"}%
---+!! <nop>%TOPIC%

%TOC%

---++ Description
This is a lightweighted frontend to the DBCacheContrib. The provided
tags DBQUERY and DBCALL can be used as a drop-in replacement for SEARCH and INCLUDE
that use the database store instread of searching and extracting on the raw
topic files. If you are looking for a more sophisticated way of
handling queries and sub-queries then have a look at the TWiki:Plugins.FormQueryPlugin.

*DBQUERY* is provided to ease the use of
<nop>TWikiApplications based on the DBCacheContrib combining its flexible query
language with unrestricted formatting and an extend mechanism to extract topic
properties. 

*DBCALL* is named "call" and not "include" as its main purpose is to ease 
<nop>TWikiApplications where <nop>TopicFunctions are treated as stored procedures.
It fetches pre-compiled topics or sections of it. "Glue" chars
(see TWiki:Plugins:GluePlugin) are applied in advance so that the actual rendering time
is minimized. DBCALL does therefore not allow to call "external" pages as INCLUDE allows.
DBCALL's "warn" parameter can only be set to "on" and "off" and does not allow 
alternative content in case of a warning. The "pattern" feature used to extract a fragment from
an INCLUDEd text using regular expression  has been droppped.
That aside DBCALLs can be called recursively as INCLUDEs can,
parametrized using key-value arguments and
obeys to %<nop>STARTINCLUDE%, %<nop>STOPINCLUDE%, %<nop>SECTION{"..."}% 
and %<nop>ENDSECTION{"..."}%.

Using the <nop>DBCacheContrib topic sections are stored into the topic object of the database.
The section between %<nop>STARTINCLUDE% ... %<nop>STOPINCLUDE% is called 
=_sectiondefault= whereas all sections between %<nop>SECTION{"&lt;name>"}% .... 
%<nop>ENDSECTION{"&lt;name>"}% are called =_section&lt;name>= and are stored accordingly.


---++ Syntax
---+++ DBQUERY
DBQUERY can be used in either of two modes (a) as a pure search
tool or (b) as a tool to extract properties of (a set of) known topics.

*Syntax:*
| *%<nop>DBQUERY{"&lt;search>" ... }%* ||
| ="&lt;search>"= \
| search clause, see documentation of the DBCacheContrib (mode (a)) |
| =topics="..."= or =topic="..."= \
| set of topics to consult (mode (b)); \
  if "topics" are specified in addition to a "search" it will be restricted to \
  the given topics |
| =web="..."= | web where to search for hits; defaults to the current one |
| =format="..."= | format string to display search hits;\
  defaults to "$topic"; the special format string "none" disables the format string |
| =header="..."= | format string to prepended to the list of hits |
| =footer="..."= | format string to appended to the list of hits |
| =separator="..."= | format string used to separate hits; \
  defaults to "$n"; the special separator "none" disables separation |
| =include="..."= | pattern each found topic name must match to be considered a hit |
| =exclude="..."= | pattern each found topic name must not match to be considered a hit |
| =order="..."= | specifies the sorting of hits; defaults to "name" |
| =reverse="..."= | specify if hits should be sorted in reverse order; defaults to "off" |
| =limit="..."= | maximum number of topics to include in the hit set |
| =skip="..."= | number of topics to skip while constructing the hit set; defaults to "0" |
| =hidenull="..."= | flag to indicate that an empty hit set should not be displayed |

Following variables are expanded in format strings:
   * $percnt: % sign
   * $dollar: $ sign
   * $n: newline
   * $t: tab
   * $nop: "empty string"
   * $count: the number of hits
   * $web: the web where the hits where found
   * $formfield(&lt;formfield-name>): the value of the given formfield
   * $formatTime(&lt;formfield-accessor> [,&lt;format>]): format the datefield pointed
     to by the &lt;formfield-accessor> using the given &lt;format>; the format can be
     in any form supported by =TWiki::Func::formatTime()= 
     (see [[%TWIKIWEB%.TWikiVariables#DISPLAYTIME_format_formatted_dis][TWikiVariables]] documentation).
   * $expand(&lt;formfield-accessor>): return the formfield pointed to by the 
      &lt;formfield-accessor>
   * $encode(...): encode entities so that the text can be included in an rss feed
   * $flatten(...): remove any special markup producing a flattened text representation

*Formfield accessors:*

In its most basic form =$expand(Ref)= is identical to =$formfield(Ref)=. In addition
=$expand()= can be used to refer to topic properties of related topics that can be reached from the current one using the '@' symbol. For example, if a topic A uses a form that contains a field named "Ref" and specifies a reference to 
another topic B (by using its name) you can access the "Headline" in B from A using =$expand(@Ref.Headline)=.
A formfield accessor can be a composed one using 'or' and 'and'. Example: =$expand(Name or Author)=
will expand to the value of the formfield "Name" if it exists and is non-empty and to the value 
of the formfield "Author" otherwise. More valid examples:
   * =$expand(@Ref.Headline)=: headline of the refered topic
   * =$expand(Nr and '.')=: append a dot to the formfield value "Nr" if it exists
   * =$expand(Name or Author)=: expand to "Name" or "Author"

---+++ DBCALL
Fetch topic content or a section of it from the database store.

*Syntax:*
| *%<nop>DBCALL{"&lt;topic" ... }%* ||
| ="&lt;topic>"= | topic that we'd like to call |
| =section="..."= | optional named section; without this parameter the "default" section is used |
| =&lt;key>="&lt;value>"= | topic arguments to be substituted within the included text; that is \
            every occurence of &lt;key> is substituted with &lt;value> |
| =warn="on,off"= | enable/suppress error warnings |

---+++ DBDUMP
Display the database record of a topic (usefull for debugging).

*Syntax:*
| *%<nop>DBDUMP{"&lt;topic" ... }%* ||
| ="&lt;topic>"= | topic that we'd like to debug |
| =web="..."= | name of the web to look for the given topic; \
  note that you can use the dot-notation in specifying the <nop>web.topic also |


---++ Perl API

The <nop>DBCachePlugin supports overloading the contained default database cache by inherriting
from =DBCachePlugin::WebDB= being itself a =DBCacheContrib=. The only purpose of the 
=DBCachePlugin::WebDB= is to extract the <nop>TopicFunctions contained in a topic as described
above. You can easily extend this functionality by deriving a <nop>WebDB specific of your
own <nop>TWikiApplication. For example, the TWiki:Plugins.BlogPlugin defines a <no>WebDB of
its own where it caches the createdate of a topic being either specified in a formfield  or
given in the timestamp of the first revision of a topic.

---+++ DBCachePlugin 
---++++ getDB()
Returns a database object used for further queries.  This function must be
called ahead of any actual database access. If your <nop>TWikiApplication is
using a derived <nop>WebDB then use the =WEBDB= variable in your WebPreferences
to point to its implementation (example: =Set WEBDB =
TWiki::Plugins::BlogPlugin::WebDB=). If =WEBDB= is not defined the default
implementation =TWiki::Plugins::DBCachePlugin::WebDB= is used.  Note, that this
way only one application-specific database cache can be loaded _per web_.  This
is rather a design decision; otherwise each DBQUERY and DBCALL tag had to
declare which database it operated on. So currently the rule of thumb is: one
web one <nop>TWikiApplication making use of this plugin.

| *$webDB = getDB($web)* ||
| =web= | name of the web whose database is to be loaded |

returns a database object. See the TWiki:Plugins::DBCacheContrib documentation
for its interfaces.

---+++ DBCachePlugin::WebDB 
This implements the database object that is used to access the topic records in
a web. Note, that for each web there is exactly one <nop>WebDB database object.
A database object is fetched (and initialized if needed) by the
DBCachePlugin::getDB() function. 

---++++ dbQuery()
The DBQUERY functionality can be access from within perl using the plugins =dbQuery()= method.

| *(@$topicNames, %$topicObjs, $errorMsg) = $db-&gt;dbQuery([$search, @$topics, $order, $reverse, $include, $exclude])* ||
| =webDB= | database object |
| =search= | search clause |
| =topics= | restrict search to this list of topics |
| =order= | define a sorting on the hit set; this can be any formfield accessor or \
  one of the shortcuts "created" (for createdate) or "modified" (for info.date) provided  \
  for compatibility with TWiki's SEARCH |
| =reverse=on,off= | revert the sorting order |
| =include= | pattern that topic names must match to be considered a hit |
| =exclude= | pattern that topic names must _not_ match to be considered a hit |

returns a list pointer of all found topics names, a hash pointer to an array of all found
topic objects (keys are the name of the topics) and a possibly defined error message.

---++++ getFormField()
Access the formfield value of an arbitrary topic.

| *$value = $db-&gt;getFormField($topic, $formfield)* ||
| =topic= | a topic name |
| =formfield= | a formfield name |

returns the value of the named formfield 

%RED%TODO: document the rest of the methods %ENDCOLOR%

---++ Plugin Settings
Plugin description:
   * Set SHORTDESCRIPTION = Lightweighted frontend to the DBCacheContrib

Each web can specify an alternative implementation inherriting from DBCachePlugin::WebDB.
To specify it you have to set the =WEBDB= variable in the WebPreferences. If not the
following is the default paramenter (omitting the #)
   * #Set WEBDB = TWiki::Plugins::DBCachePlugin::WebDB
   

---++ Plugin Installation Instructions

   * Download and install all additionally required plugins listed in the
     [[#Plugin_Info][dependencies information]] below
   * Download the %TOPIC% ZIP file from the Plugin web (see below)
   * Unzip ==%TOPIC%.zip== in your twiki installation directory. Content:
     | *File:* | *Description:* |
     | ==data/TWiki/%TOPIC%.txt== | Plugin topic |
     | ==lib/TWiki/Plugins/%TOPIC%.pm== | Plugin Perl module |
     | ==lib/TWiki/Plugins/%TOPIC%/WebDB.pm== | Plugin Perl module |

---++ Plugin Info

|  Plugin Author: | TWiki:Main.MichaelDaum |
|  Plugin Version: | 01 Dec 2005 (v0.91) |
|  Change History: | <!-- versions below in reverse order -->&nbsp; |
|  24 Nov 2005: | Initial version |
|  TWiki Dependency: | $TWiki::Plugins::VERSION 1.1 |
|  CPAN Dependencies: | none |
|  Other Dependencies: | TWiki:Contrib.DBCacheContrib |
|  Perl Version: | 5.005 |
|  License: | GPL ([[http://www.gnu.org/copyleft/gpl.html][GNU General Public License]]) |
|  [[TWiki:Plugins/Benchmark][Benchmarks]]: | %TWIKIWEB%.GoodStyle nn%, %TWIKIWEB%.FormattedSearch nn%, %TOPIC% nn% |
|  Plugin Home: | TWiki:Plugins/%TOPIC% |
|  Feedback: | TWiki:Plugins/%TOPIC%Dev |
|  Appraisal: | TWiki:Plugins/%TOPIC%Appraisal |

-- TWiki:Main.MichaelDaum - 01 Dec 2005


