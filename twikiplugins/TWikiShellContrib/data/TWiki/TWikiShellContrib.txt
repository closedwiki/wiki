%META:TOPICINFO{author="TWikiContributor" date="1099288894" format="1.0" version="1.3"}%
---+!! TWiki Shell

%TOC%

---+ Purpose
%STARTINCLUDE%
TWikiShellContrib is  a shell that can be use to replace all twiki command line scripts with a single interface. Each command available in the twikishell is also available as a command line option using the -e switch.
%ENDINCLUDE%

---+ Installation

	* Make sure that Term::Shell is installed (either in the perl distribution or locally in twiki)
	* Unzip ==%TOPIC%.zip== in your twiki installation directory. Content:
	| *File:* | *Description:* |
%MANIFEST%

If you have a non-standard instalation, then move the files wherever you need them to be.

---+ Usage

In the TWiki home directory, there is an uber-command:
	* twikishell

This will fire the shell. The following command line options are available:

| *Option* | *Description* |
| -v | Verbose mode (Verbosity level 1) (Default) |
| -vv | Very Verbose mode (Verbosity level 2) |
| -q | Quiet Operation (Verbosity level 0) |
| -d | Turns on debugging (prints debug statements to console) |
| <command> | Execute the specified command. Must be the last option in the cli. i.e: twikishell package CalendarPlugin|

---+ Operation

When the shell starts, it first try to load the =.twikirc= file for the stored configuration. If it can't find it, it will create an empty configuration, and is up to each CommandSet to reconfigure themselves.

On a bare installation (without any CommandSets installed), you have the following available commands:

| *Command* | *Description* |
| help | Shows a list of available commands  |
| help <command> | Shows the help page for the <command>. ie: =help plugin develop= |
| exit, q , quit | Quits the shell |
| import <perl module> | Imports a perl module and scan it for new commands to be added to the shell |
| verbose <level> | Changes the verbosity level to either 1 or 2 |
| quiet | Changes the verbosity level to 0 |
| debug | Set debugging On and Off. Usage: debug [on/off] |

The config file is a dump (using Data::Dumper) of the configuration object used internally

%INCLUDE{CommandSet}%

To get an idea of what can be done with TWikiShellContrib, see UsingBuildContribAndTWikiShell.

---+ Config Object

The config object provides a centralized place where CommandSet can store their settings. It's a blessed hash with the following published subs

	* sub save : Save the configuration to the .twikishellrc file, using Data::Dumper
	* sub saveAndDispose: Clean up the configuration and save it as per save sub.

Also, the configuration will always have the following variables set:

	* verbosity : Last verbosity set
 * configFileName : The name of the config file
 * debug : if debug is enabled or not.

Also, unless the TWiki CommandSet is uninstalled, a hash containing the =lib=,=bin=,=pub= and =root= directories for the installation is available unther the key =TWIKI= (ie: $config->{TWIKI}{root} has the absolute path to the root of the twiki installation).


Any CommandSet that want to store a setting in the config object, must call the save method. 

It's recommended that CommandSets using the config object to store settings must create a namespace using a hash for the settings so they won't conflict with others. Example:

The ==TWiki::Contrib::TWikiReleaseTrackerCommand== may store it's settings in ==$config->{TWikiReleaseTrackerCommand}==, so it's settings accessed using ==$config->{TWikiReleaseTrackerCommand}{setting_name}==

---++ Settings
   * Name of the perl package
      * Set STUB = TWiki::Contrib::TWikiShellContrib

---+ Services

The "services" are sets of common functionality than can be reused across CommandSets.

---++ TWiki::Contrib::TWikiShellContrib::Zip

---+++ unzip($sourceFile,$targetDir)

Unzips $sourceFile to $targetDir. It's use ==Archive::Zip== if installed, or the configured unzip program if not.

---++ TWiki::Contrib::TWikiShellContrib::DirHandling

---+++ makepath($path)

Creates the directory structure leading to $path. Examples:

<verbatim>
makepath("/lib/TWiki/Plugin/NewPlugin/NewPlugin.pm");
</verbatim>

will try to create the following directories if they don't exist:
<verbatim>
/lib
/lib/TWiki
/lib/TWiki/Plugin
/lib/TWiki/Plugin/NewPlugin
</verbatim>

<verbatim>
makepath("/pub/SomeDir/SomeSubDir");
</verbatim>

will try to create the following directories if they don't exist:

<verbatim>
/pub
/pub/SomeDir
</verbatim>

---++ TWiki::Contrib::TWikiShellContrib::Help

---+++ assembleHelp(\%doco,@order) -> $helpText

Assembles a help text from the provided hash (to be continued)


---+ Contrib Info

| Authors: | TWiki:Main.MartinCleaver,TWiki:Main.RafaelAlvarez |
| Copyright &copy;: | 2004, Crawford Currie, Rafael Alvarez and Martin Cleaver|
| License: | GPL |
| Dependencies: | Term::Shell |
| 10/08/2005 | 2.0 Removed reload and register commands. Major overhaul of the code. Added new CommandSets |
| 02/11/04 | 1.1 Added reload and register commands |
| 21/10/04 | 1.000 Initial release, based on the work of TWiki:Main.MartinCleaver|
|  Home: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC% |
|  Feedback: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC%Dev |

__Related Topics:__ TWiki:Main.TWikiShell

