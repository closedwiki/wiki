%META:TOPICINFO{author="TWikiContributor" date="1023947640" format="1.0" version="1.1"}%
<!--

   PLEASE DO NOT EDIT THIS TOPIC

   It is automatically generated from the subversion repository, and any changes
   you make will simply be overwritten the next time a release is generated.

   Instead, you could check your fix in, raise a bug in the Bugs web, or mail the author(s).
-->
---+!! <nop>%TOPIC%

%TOC%

---++ Description
This plugin adds a couple of tags that allow to render content conditionally.
There are two different ways to do that: either by using the inline 
=%<nop>IFDEFINED{"string" then="..." else="..."}%= tag that returns the 
=then= or =else= argument depending on the =string= being defined, that is non-empty.
There are no other ways to deceide the condition but rendering the =string= argument
using <nop>TWikiML, for example by embedding a =%<nop>CALC{}%= expression. This simplifies
this plugin alot and allows a rather flexible way to generate the condition.

The other way is to use blocks of content surrounded by expressions like this:
<verbatim>
%IFDEFINEDTHEN{"string"}%
...
%ELSIFDEFINED{"string"}%
...
%ELSEDEFINED%
...
%FIDEFINED%
</verbatim>
This way conditioning content is not limited to fit into a <nop>TWikiML argument
as it is the case using an inline IFDEFINED tag. Blocked conditions can be nested
and are evaluated starting from the outside, contrary to standard <nop>TWikiML being
evaluated left-to-right-inside-out.

---++ Related work
Similar extensions have been done before but are either only available as an integral part of TWiki-4.0 
(see TWiki:TWiki04/IfStatements) or unmaintained (see TWiki:Plugins/ConditionalPlugin).
Especially these two alternatives are rather similar as they defined the same tag (%IF).
The main differences between those and this plugin here is that they have a more elaborated
conditon parser that allows to evaluate more complex boolean expressions. Some of the
expressions in %IF of TWiki-4.0 are specific to that platform and make only sense there
(context). The other difference is that the IFDEFINED tag family allows nested blocks of
conditional content and %IF is an inline tag only.

The advantage of this plugin is that you get a simpler mechanism for checking the condition
which is however more flexible as the string can be generated arbitrarily using <nop>TWikiML.
Furthermore, and possibly more important, this plugin is backwards compatible and may be used
on a TWiki/Beijing, TWiki/Cairo and TWiki/Dakar engine.

This plugin has been externalized from the TWiki:Plugins/NatSkinPlugin.


---++ Syntax Rules
---+++ IFDEFINED
*Syntax*: 
<verbatim>
%IFDEFINED{"<TWikiML>" 
  [action="view,edit,preview,..."]? 
  [as="..."]
  then="..." 
  else="..." 
  glue="on,off"}%
</verbatim>

returns the "then" or "else" content depeinding on the &lt;<nop>TWikiML>
expression expanding to the emtpy string or to the string given in "as".
Optionally the current topic action is checked to match the given one.  This
tag works similar to the <nop>IfStatements in dakar but is backwards compatible
to beijing and cairo and omits the overhead of an expression parser.

---+++ IFDEFINEDTHEN, ELSIFDEFINED, ELSEDEFINED, FIDEFINED
*Syntax*:
<verbatim>
%IFDEFINEDTHEN{"<TWikiML>" [action="view,edit,preview,..."]?}% 
  <then content> 
[%ELSIFDEFINED{...}% 
  <elsif content>]* 
[%ELSEDEFINED%
  <else content>]?
%FIDEFINED%
</verbatim>

This is the multi-line version of [[#IFSDEFINED][IFSDEFINED]].
IFDEFINEDTHEN expressions can be nested safely.  Within a single IFDEFINEDTHEN
the ELSIFDEFINED parts can be repeated arbitrarily.  Before rendering the
=&lt;then|elsif|else condition>= any =$nop= string will be removed first.
Thereby nested <nop>TWikiML expressions can be prevented from being expanded in
advance.

---++ Demo
	* Set FOO = foo
	* FOO is %IFDEFINED{"%FOO%" then=" " else="not" glue="off"}% defined.
	* FOO is %IFDEFINED{"%FOO%" as="bar" then=" " else="not" glue="off"}% defined as "bar".
	* BAR is %IFDEFINED{"%BAR%" then=" " else="not" glue="off"}% defined.
   

---++ Plugin Settings

	* Set SHORTDESCRIPTION = Render content conditionally

---++ Plugin Installation Instructions

	* [[http://twiki.org/p/pub/Plugins/%TOPIC%/%TOPIC%.zip][Download]] the ZIP file
	* Unzip it in your twiki installation directory. Content: 
	  | *File:* | *Description:* |
	  | ==data/TWiki/%TOPIC%.txt== | Plugin topic |
	  | ==lib/TWiki/Plugins/%TOPIC%.pm== | Plugin Perl module |

---++ Plugin Info

|  Plugin Author: | TWiki:Main.MichaelDaum |
|  Copyright &copy;: | 2006, Michael Daum |
|  License: | GPL ([[http://www.gnu.org/copyleft/gpl.html][GNU General Public License]]) |
|  Plugin Version: | v0.92 |
|  Change History: | <!-- specify latest version first -->&nbsp; |
|  07 Aug 2006: | be smarter to detect the cgi action wrt to different apache setups |
|  10 Mar 2006: | added =as= parameter; \
                  added escape parameters and recursive variable expansion to the condition argument \
		  which helps to circumvent problems due to different plugin orders |
|  21 Feb 2006: | Initial version |
|  CPAN Dependencies: | none |
|  Other Dependencies: | none |
|  Perl Version: | 5.8 |
|  TWiki:Plugins/Benchmark: | %TWIKIWEB%.GoodStyle nn%, %TWIKIWEB%.FormattedSearch nn%, %TOPIC% nn% |
|  Plugin Home: | TWiki:Plugins/%TOPIC% |
|  Feedback: | TWiki:Plugins/%TOPIC%Dev |


-- TWiki:Main.MichaelDaum - 07 Aug 2006
