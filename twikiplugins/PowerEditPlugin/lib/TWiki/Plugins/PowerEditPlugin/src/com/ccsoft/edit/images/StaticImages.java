package com.ccsoft.edit.images;

import java.awt.*;
import java.util.Hashtable;
import java.io.*;

/**
 * Static images used by the editor. They are put in here to avoid having
 * to go back to the server for pictures at runtime. This has a double
 * benefit; it reduces the time taken to load, and it allows the editor
 * to be used stand-alone without an internet connection. Placing the
 * images in the jar would seem to be a better way to do this, but it
 * doesn't work with JDK 1.1 on Netscape, which has security issues
 * reading the jar.
 */
public class StaticImages {

    static Hashtable images = new Hashtable();
    
    static {
//START IMAGES
images.put("BOLD_BUTTON", new byte[] {
71,73,70,56,57,97,16,0,
16,0,-128,0,0,-64,-64,-64,
0,0,0,44,0,0,0,0,
16,0,16,0,0,2,32,-124,
-113,-87,-53,-99,1,99,100,-46,
-52,117,65,70,119,115,25,56,
29,68,-111,-106,-7,-103,-98,6,
-82,-50,11,-57,-14,81,0,0,
59, });
images.put("COPY_BUTTON", new byte[] {
71,73,70,56,57,97,16,0,
16,0,-62,0,0,-64,-64,-64,
0,0,-128,-1,-1,-1,0,0,
0,-128,-128,-128,0,0,0,0,
0,0,0,0,0,44,0,0,
0,0,16,0,16,0,0,3,
52,8,-70,-36,-2,46,-56,9,
85,16,88,-56,122,-121,-97,-45,
-64,92,24,65,98,-35,-46,125,
-126,-89,109,86,102,102,89,-96,
-74,-84,-25,-38,113,121,-42,42,
-48,106,7,-7,-95,-118,66,88,
101,-55,108,54,18,0,59, });
images.put("REDO_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-128,0,0,-64,-64,-64,
0,0,-128,44,0,0,0,0,
16,0,16,0,0,2,31,-124,
-113,-87,-53,-19,31,-94,-100,106,
-38,-8,16,-82,53,-84,125,-128,
-64,101,72,9,57,122,-116,-24,
-88,-39,11,-57,70,1,0,59,
 });
images.put("UL_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-95,0,0,-64,-64,-64,
-128,-128,-128,0,0,-128,0,0,
0,44,0,0,0,0,16,0,
16,0,0,2,37,-124,-113,-87,
-53,-99,17,-36,9,66,-60,-127,
115,54,-44,74,30,1,-38,-8,
73,-93,86,42,80,-39,93,39,
-58,85,-95,-76,-118,-17,-112,-26,
72,1,0,59, });
images.put("PASTE_BUTTON", new byte[] {
71,73,70,56,57,97,16,0,
16,0,-62,0,0,-64,-64,-64,
0,0,0,-1,-1,0,-128,-128,
0,-128,-128,-128,-1,-1,-1,0,
0,-128,0,0,0,44,0,0,
0,0,16,0,16,0,0,3,
68,8,-70,-36,14,33,-122,-89,
100,16,-62,-74,57,110,-52,64,
-57,4,68,80,-100,40,57,45,
-86,37,-107,-29,16,42,70,109,
-113,-13,64,24,104,81,-77,50,
-39,-82,-25,99,-27,-122,-110,98,
37,8,24,-10,12,-58,32,82,
2,101,89,120,79,10,-64,-58,
-43,122,-65,-117,4,0,59, });
images.put("REREPLACE_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-62,0,0,-64,-64,-64,
0,0,0,-1,-1,0,-63,46,
46,78,-88,69,-64,-64,-64,-64,
-64,-64,-64,-64,-64,44,0,0,
0,0,16,0,16,0,0,3,
54,8,-70,12,-47,112,5,-15,
100,-72,24,11,42,-73,-1,94,
-107,-115,19,23,49,83,117,-94,
107,-37,12,13,33,67,67,-51,
-56,-60,91,-37,10,-50,-20,64,
-100,-16,-57,3,8,115,68,-40,
-62,-89,83,46,93,-85,4,0,
59, });
images.put("FIND_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-62,0,0,-64,-64,-64,
0,0,0,-1,-1,-1,-1,-1,
0,-128,-128,-128,0,0,0,0,
0,0,0,0,0,44,0,0,
0,0,16,0,16,0,0,3,
52,8,-70,-36,-2,47,72,38,
-125,11,-62,46,-84,105,-90,67,
-89,84,18,1,-112,-99,-108,-95,
-24,-56,-111,107,-27,-58,82,72,
-70,44,59,-58,-124,121,-58,35,
-101,40,32,-60,77,54,55,-120,
114,-55,92,38,0,0,59, });
images.put("UNDERLINE_BUTTON", new byte[] {
71,73,70,56,57,97,16,0,
16,0,-128,0,0,-64,-64,-64,
0,0,0,44,0,0,0,0,
16,0,16,0,0,2,32,-124,
-113,-87,-53,-83,1,-125,-119,12,
34,89,-15,108,-10,-24,-9,125,
73,-73,101,23,23,58,17,-23,
-76,-64,10,-117,-18,-100,20,0,
59, });
images.put("CUT_BUTTON", new byte[] {
71,73,70,56,57,97,16,0,
16,0,-128,0,0,-64,-64,-64,
0,0,-128,44,0,0,0,0,
16,0,16,0,0,2,34,-124,
-113,-87,-53,22,-9,26,-120,83,
-50,23,104,-61,-42,-27,-18,-128,
-105,-74,-115,-37,23,-111,97,-107,
46,109,-85,-64,31,51,-117,77,
1,0,59, });
images.put("UNDO_BUTTON", new byte[] {
71,73,70,56,55,97,15,0,
16,0,-128,0,0,-64,-64,-64,
0,0,-128,44,0,0,0,0,
15,0,16,0,0,2,29,-124,
-113,-87,-53,-19,26,-94,-100,105,
-38,-8,14,70,97,109,-13,113,
29,120,81,90,25,-110,25,-72,
-74,110,91,0,0,59, });
images.put("OL_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-95,0,0,-64,-64,-64,
0,0,-128,0,0,0,0,0,
0,44,0,0,0,0,16,0,
16,0,0,2,35,-124,-113,-87,
-85,-63,-19,94,-118,64,-40,123,
15,-107,32,120,-125,-123,-36,24,
98,-38,-10,68,104,10,-106,-106,
54,26,-34,-25,-66,-15,-99,20,
0,59, });
images.put("ITALIC_BUTTON", new byte[] {
71,73,70,56,57,97,16,0,
16,0,-128,0,0,-64,-64,-64,
0,0,0,33,-2,21,67,114,
101,97,116,101,100,32,119,105,
116,104,32,84,104,101,32,71,
73,77,80,0,44,0,0,0,
0,16,0,16,0,0,2,23,
-124,-113,-87,-53,-19,17,28,-126,
-78,-38,6,-93,-91,-107,119,45,
81,32,-26,93,-26,-55,20,0,
59, });
images.put("REFIND_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-62,0,0,-64,-64,-64,
0,0,0,-1,-1,0,-1,-1,
-1,-128,-128,-128,0,0,0,0,
0,0,0,0,0,44,0,0,
0,0,16,0,16,0,0,3,
53,8,-70,12,-47,112,5,-15,
100,-72,24,11,42,-73,-1,94,
-107,-115,19,23,49,83,117,-94,
16,-90,-72,81,48,-120,115,-116,
17,99,59,95,-5,-43,-110,48,
70,-17,-75,-125,80,124,-114,-29,
15,-103,89,57,21,9,0,59,
 });
images.put("REPLACE_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-95,0,0,-64,-64,-64,
-63,46,46,-128,-128,-128,78,-88,
69,44,0,0,0,0,16,0,
16,0,0,2,48,-124,-113,-87,
-53,16,39,-122,92,-95,-102,56,
83,-35,0,15,-67,109,30,34,
-108,92,39,125,-119,112,-114,107,
-101,42,-84,-123,102,-92,-104,-26,
-73,-27,-39,23,-20,-5,-47,80,
-115,-94,81,81,0,0,59, });
images.put("TT_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-62,0,0,-64,-64,-64,
-128,-128,-128,-85,-85,-85,0,0,
0,-106,-106,-106,107,107,107,-1,
-1,-1,-1,-1,-1,44,0,0,
0,0,16,0,16,0,0,3,
44,8,-70,-36,-2,48,-54,25,
94,109,98,-124,45,84,-48,1,
-79,100,-37,5,124,28,99,-86,
86,-21,4,29,16,3,-59,-56,
20,-125,-74,16,121,49,79,-64,
-96,112,24,76,0,0,59, });
images.put("LINK_BUTTON", new byte[] {
71,73,70,56,55,97,16,0,
16,0,-29,0,0,-64,-64,-64,
-128,-128,-128,107,107,107,64,64,
64,22,22,22,86,86,86,43,
43,43,-85,-85,-85,-106,-106,-106,
-64,-64,-64,-64,-64,-64,-64,-64,
-64,-64,-64,-64,-64,-64,-64,-64,
-64,-64,-64,-64,-64,44,0,0,
0,0,16,0,16,0,0,4,
59,16,-56,73,-85,-67,56,-21,
-51,103,8,-109,0,-120,87,32,
12,38,33,-88,66,-128,-114,64,
80,0,6,48,-40,54,104,28,
-46,-121,-33,-64,30,40,6,10,
2,-117,8,9,34,41,26,32,
4,39,23,-120,-124,-71,117,-82,
-40,-84,38,2,0,59, });
//END IMAGES
    };

    public static Image getImage(String name) {
	byte[] nm = (byte[])images.get(name);
	if (nm == null) {
	    return null;
	}
	return Toolkit.getDefaultToolkit().createImage(nm);
    }

    /**
     * Main program generates the above image data
     * given the name of a GIF file.
     */
    static void main(String[] args) throws IOException {
	File f = new File("StaticImages.java");
	BufferedReader r = new BufferedReader(new FileReader(f));
	String l;
	while ((l = r.readLine()) != null) {
	    System.out.println(l);
	    if (l.equals("//START IMAGES"))
		break;
	}
	if (l == null)
	    throw new IOException("Where is //START IMAGES?");
	while ((l = r.readLine()) != null) {
	    if (l.equals("//END IMAGES"))
		break;
	}
	if (l == null)
	    throw new IOException("Where is //END IMAGES?");
	
	f = new File(".");
	String[] gifs = f.list(new FilenameFilter() {
		public boolean accept(File f, String name) {
		    return name.endsWith("_BUTTON.gif");
		}});
	
	for (int i = 0; i < gifs.length; i++) {
	    f = new File(gifs[i]);
	    String imageName = gifs[i].substring(0, gifs[i].length() - 4);
	    System.out.println(
		"images.put(\"" + imageName + "\", new byte[] {");
	    DataInputStream di = new DataInputStream(new BufferedInputStream(
		new FileInputStream(gifs[i])));
	    int ll = 0;
	    try {
		while (true) {
		    byte b = (byte)di.readByte();
		    System.out.print(b + ",");
		    ll++;
		    if (ll % 8 == 0)
			System.out.println();
		}
	    } catch (EOFException eofe) {
	    }
	    System.out.println(" });");
	}

	do {
	    System.out.println(l);
	} while ((l = r.readLine()) != null);
    }
}
