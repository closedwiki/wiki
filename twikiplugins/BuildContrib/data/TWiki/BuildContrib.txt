---+!! TWiki Developer Environment

Automates build process, including installer generation, for Pugins, Add-ons and Contrib modules.

%TOC%

---+ Summary of Contents

---++ Build & Install Modules
The Build.pm module can be used by developers to create a really simple build process for your plugin, addon or contrib module. The advantage of using this module is that it dictates a standard build procedure for plugins, so you won't get file names wrong or get the list of files in the plugin topic wrong either.

The module also automatically generates an installer script that manages dependencies in the user installation.

#DevelopmentModel
---+++ Development Model
The build module assumes:
   * that you are *not* developing your plugin in a live TWiki installation (which is usually a really bad idea), but are instead doing the sensible thing and developing in a separate directory tree, usually - but not always - an SVN checkout area.
   * that your module follows the standards for plugins and contribs i.e. that it
      1 has a topic in the =data/TWiki= directory
      1 has a perl module in the =lib/TWiki/Plugins= or =lib/TWiki/Contrib= directory
      1 has a sub-directory alongside the perl module that contains the extra =.pm= files specific to the module

The idea is that your module is built using a perl script =build.pl= that is kept in the module-specific subdirectory (3). This build script is like a Makefile. It has several _targets_ that can be used to perform different stages of the development cycle. By default these targets are:
| =build= | check that everything is perl |
| =test= | run unit tests |
| =installer= | Build an install/uninstall script for use by end-users |
| =install= | install on local installation defined by $TWIKI_HOME |
| =uninstall= | uninstall from local installation defined by $TWIKI_HOME |
| =pod= | build POD documentation |
| =release= | build, pod and package a release zip |
| =upload= | build, pod, package and upload to twiki.org |
| =manifest= | print a best-guess _draft_ MANIFEST file |
The default target is =test=.

The module is designed so that most common behaviour is catered for. It is also easy to _override_ any of the default targets in your =build.pl= and add extra behaviours.

The result of the 'release' target is a ZIP file, that will contain the following:
   1 All the files listed in the MANIFEST
   1 A generated documentation topic
   1 An install/uninstall script, that is run after the module is unzipped
This zip file can be generated and subsequently uploaded to twiki.org, or you can simply use the =upload= target directly.

The easiest way to start using the module is to copy the =build.pl= file from =lib/TWiki/Contrib/BuildContrib/build.pl= into your own plugin or contrib, in the corresponding place i.e. copy it to =lib/TWiki/Plugins/MyPlugin/build.pl= or =lib/TWiki/Contrib/MyContrib/build.pl=. Then edit the file, and change as appropriate (it should be fairly obvious what you have to do). Then type
   * =perl build.pl manifest=
This should inspect the directory structure and write a best-guess MANIFEST file.

__Notes__
   * This is a _build_ module for use by developers, not an _install_ module for end users. When a release is built, an installer/uninstaller script is automatically generated that is packaged with the release. This simple script is the only part of the build system visible to end users
   * This topic and all the embedded POD documentation are generated using this build module.
   * The build environment does _not_ assume the use of SVN, though it is highly recommended.
   * The =test= target assumes you are using Test::Unit. =Build.pm= has only been tested on Linux, but should work with cygwin OK.
---+++ Install support
The installer script shipped with the package is very simple. By default all it does is to check the dependencies you list, and if necessary download and install any missing TWiki and CPAN modules. Other dependencies are simply checked. In Dakar and later releases, TWiki topics shipped with the module are automatically merged into any existing local copies, ensuring histories are preserved.

If you want your installer to do anything else - for example, optionally install submodules shipped with the module - then you will need to write a POSTINSTALL script. A good example of a POSTINSTALL can be found in the SVN tree for TWiki:Plugins/WysiwygPlugin.

---++ Test Fixtures
The are a number of test fixtures in the repository that can be used for testing plugins with =Test::Unit=. The fixtures replace the =TWiki::Func=, =TWiki::Store= and TWiki modules, allowing a stand-alone unit test suite to be built for the plugin. The easiest way to use the fixtures is to copy the tests from an existing plugin that uses them - for example, CommentPlugin, ActionTrackerPlugin, WebDAVPlugin or FormQueryPlugin - and modify the tests appropriately for your plugin.

The fixtures do not replace _all_ of the TWiki core functionality, just those pieces used by the plugins. If you find a piece is missing, and you need it, please feel free to extend the fixtures on condition that you check your improvements back in.
---++ Support scripts
=conformance_analyser.pl= is a perl script that analyses the conformance of plugins to the API and packaging standards. It is driven from the zips downloadable from twiki.org.

---+ Detailed Documentation
%$POD%

---+ Settings
	* Name of the perl package
		* Set STUB = %$STUB%
	* One line description:
		* Set SHORTDESCRIPTION = Automate build process for Pugins, Add-ons and Contrib modules

---+ Installation Instructions
You are strongly recommended to use this Contrib to help split your code development away from your live TWiki environment, as described [[#DevelopmentModel][above]].
	* Download the ZIP file from the Plugin web (see below)
	* Unzip ==%TOPIC%.zip== in your development ($TWIKI_DEV) directory. Content:
	| *File:* | *Description:* |
%$MANIFEST%
	* Optionally, run ==%TOPIC%_installer.pl== to automatically check and install other TWiki modules that this module depends on. You can also do this step manually.
	* Alternatively, manually make sure the dependencies listed in the table below are resolved.
	%$DEPENDENCIES%

---+ Contrib Info

| Authors: | TWiki:Main.CrawfordCurrie |
| Copyright &copy;: | 2004, Crawford Currie http://www.c-dot.co.uk |
| License: | [[http://www.gnu.org/copyleft/gpl.html][GPL]] |
| Version: | %$VERSION% (See SVN for change history) |
| Dependencies: | %$DEPENDENCIES% |
|  Home: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC% |
|  Feedback: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC%Dev |
|  Appraisal: | http://TWiki.org/cgi-bin/view/Plugins/BuildContribAppraisal |

__Related Topics:__ %TWIKIWEB%.TWikiPreferences

-- TWiki:Main/CrawfordCurrie - %$DATE% %BR%
-- TWiki:Main/MartinCleaver - %$DATE%
