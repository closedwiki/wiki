%META:TOPICINFO{author="TWikiContributor" date="1111929255" format="1.0" version="$Rev$"}%

%TOC%
%STARTINCLUDE%

---# TWiki Access Control

_Restricting read and write access to topics and webs, by Users and groups_

TWikiAccessControl allows you restrict access to single topics and entire webs, by individual user and by user Groups, in three areas: view; edit &amp; attach; and rename/move/delete. Access control, combined with TWikiUserAuthentication, lets you easily create and manage an extremely flexible, fine-grained privilege system.

---++ An Important Control Consideration

Open, freeform editing is the essence of WikiCulture - what makes TWiki different and often more effective than other collaboration tools. For that reason, it is strongly recommended that decisions to restrict read or write access to a web or a topic are made with care - the more restrictions, the less Wiki in the mix. Experience shows that _unrestricted write access_ works very well because:

	* *Peer influence* is enough to ensure that only relevant content is posted.

	* *Peer editing* - the ability for anyone to rearrange all content on a page - keeps topics focussed.

	* In TWiki, content is transparently preserved under *revision control*:
		* Edits can be undone by the %MAINWEB%.TWikiAdminGroup (the default administrators group; see [[#ManagingGroups]]).
		* Users are encouraged to edit and refactor (condense a long topic), since there's a safety net.

As a *collaboration guideline*:

	* Create broad-based Groups (for more and varied input), and...
	* Avoid creating view-only Users (if you can read it, you should be able to contribute to it).

---++ Authentication vs. Access Control

*Authentication:* Identifies who a user is based on a login procedure. See TWikiUserAuthentication.

*Access control:* Restrict access to content based on users and groups once a user is identified.

---++ Users and Groups

Access control is based on the familiar concept of Users and Groups. Users are defined by their WikiNames. They can then be organized in unlimited combinations by inclusion in one or more user Groups. For convenience, Groups can also be included in other Groups. 

---+++ Managing Users

A user can create an account in TWikiRegistration. The following actions are performed:

	* WikiName and encrypted password are recorded in =.htpasswd= if authentication is enabled.
	* A confirmation e-mail is sent to the user.
	* A user home page with the WikiName of the user is created in the %MAINWEB% web.
	* The user is added to the %MAINWEB%.%WIKIUSERSTOPIC% topic.

Users can be authenticated using Basic Authentication (htaccess) or SSL (secure server). In either case, TWikiUserAuthentication is required in order to track user identities, and use User and Group access control.

The default visitor name is %MAINWEB%.TWikiGuest. This is the non-authenticated user.

#ManagingGroups
---+++ Managing Groups

Groups are defined by group topics created in the ==%MAINWEB%== web, like the %MAINWEB%.TWikiAdminGroup. To create a new group:
	1. ==Edit== %MAINWEB%.TWikiGroups by entering a new topic with a name that ends in ==Group==. Example:
		* ==<nop>SomeGroup==
	1. *Set Preferences* for two Variables in the new group topic:
		* ==Set <nop>GROUP = &lt; list of Users and/or Groups &gt;==
		* ==Set <nop>ALLOWTOPICCHANGE = &lt; list of Users and/or Groups &gt;==
		* The GROUP variable is a comma-separated list of Users and/or other Groups. Example:
			* ==Set GROUP = %MAINWEB%.<nop>SomeUser, %MAINWEB%.<nop>OtherUser, %MAINWEB%.<nop>SomeGroup==
		* ALLOWTOPICCHANGE defines who is allowed to change the group topic; it is a comma delimited list of Users and Groups. You typically want to restrict that to the members of the group itself, so it should contain the name of the topic. (This prevents Users not in the Group from editing the topic to give themselves or others access. For example, for the <nop>TWikiAdminGroup topic write:
		* ==Set ALLOWTOPICCHANGE = %MAINWEB%.<nop>TWikiAdminGroup==

#SuperAdminGroup
---+++ The <nop>SuperAdminGroup

By mistyping a user or group name in the ALLOWTOPICCHANGE setting, it's possible to lock a topic so that no-one can edit it from a browser. To avoid this, you can create *superusers*:
	* Set the ==SuperAdminGroup== configuration setting to the wikiname of a group of Users who are always allowed to edit/view topics e.g. "TWikiAdminGroup".

---++ Restricting Access

You can define who is allowed to read or write to a web or a topic. Note that some plugins may not respect access permissions.

   * Restricting VIEW blocks viewing and searching of content.
   * Restricting CHANGE blocks creating new topics, changing topics or attaching files.
   * Restricting RENAME controls who is allowed to rename, move or delete a topic.
      * To rename, move or delete a topic, the user also also needs VIEW and CHANGE permission.  They also need CHANGE access to change references in any referring topics (though the rename can proceed without this access), and CHANGE access to the target topic.

---+++ Controlling access to a Web

You can define restrictions of who is allowed to view a %WIKITOOLNAME% web. You can restrict access to certain webs to selected Users and Groups, by:

	* *authenticating all webs and restricting selected webs:* Topic access in all webs is authenticated, and selected webs have restricted access.
	* *authenticating and restricting selected webs only:* Provide unrestricted viewing access to open webs, with authentication and restriction only on selected webs.

	* You can define these settings in the %WEBPREFSTOPIC% topic, preferable towards the end of the topic:
		* ==Set <nop>DENYWEBVIEW = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>ALLOWWEBVIEW = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>DENYWEBCHANGE = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>ALLOWWEBCHANGE = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>DENYWEBRENAME = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>ALLOWWEBRENAME = &lt; comma-delimited list of Users and Groups &gt;==

---+++ Controlling access to a Topic

	* You can define these settings in the %WEBPREFSTOPIC% topic, preferable towards the end of the topic:
		* ==Set <nop>DENYTOPICVIEW = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>ALLOWTOPICVIEW = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>DENYTOPICCHANGE = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>ALLOWTOPICCHANGE = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>DENYTOPICRENAME = &lt; comma-delimited list of Users and Groups &gt;==
		* ==Set <nop>ALLOWTOPICRENAME = &lt; comma-delimited list of Users and Groups &gt;==

Remember when opening up access to specific topics within a restricted web that other topics in the web - for example, the WebLeftBar - may also be accessed when viewing the topics. The message you get when you are denied access should tell you what topic you were not permitted to access.

---+++ How TWiki evaluates ALLOW/DENY settings

When deciding whether to grant access, TWiki evaluates the following rules in order (read from the top of the list; if the logic arrives at *PERMITTED* or *DENIED* that applies immediately and no more rules are applied). You need to read the rules bearing in mind that VIEW, CHANGE and RENAME access may be granted/denied separately.
   1 If the user is a [[#SuperAdminGroup][super-user]]
      * access is *PERMITTED*.
   1 If DENYTOPIC is set to a list of wikinames
      * people in the list will be *DENIED*.
   1 If DENYTOPIC is set to _empty_ ( i.e. <tt>Set DENYTOPIC =</tt> )
      * access is *PERMITTED* _i.e _ no-one is denied access to this topic
   1 If ALLOWTOPIC is set
      1 people in the list are *PERMITTED*
      1 everyone else is *DENIED*
         * Note that this means that setting ALLOWTOPIC to empty _denies access to everyone except admins_ (unless DENYTOPIC is also set to empty, as described above)
   1 If DENYWEB is set to a list of wikiname
      * people in the list are *DENIED* access
   1 If ALLOWWEB is set to a list of wikinames
      * people in the list will be *PERMITTED*
      * everyone else will be *DENIED*
         * Note that setting ALLOWWEB to empty _denies access to everyone except admins_
   1 If you got this far, access is *PERMITTED*

---++ Access Control quick recipes

---+++ Obfusticating Webs

Another way of hiding webs is to keep them hidden by not publishing the URL and by preventing the ==all webs== search option from accessing obfuscated webs. Do so by enabling the ==NOSEARCHALL== variable in %WEBPREFSTOPIC%:
	* ==Set <nop>NOSEARCHALL = on==

This setup can be useful to hide a new web until content its ready for deployment.

%X% *Obfuscating webs is insecure*, as anyone who knows the URL can access the web.

---+++ Authenticate all Webs and Restrict Selected Webs

Use the following setup to authenticate users for topic viewing in all webs and to restrict access to selected webs:

	1. *Restrict* view access to selected Users and Groups. Set one or both of these variables in its %WEBPREFSTOPIC% topic:
		* ==Set <nop>DENYWEBVIEW = &lt; list of Users and Groups &gt;==
		* ==Set <nop>ALLOWWEBVIEW = &lt; list of Users and Groups &gt;==
		* __Note:__ =DENYWEBVIEW= is evaluated before =ALLOWWEBVIEW=. Access is denied if the authenticated person is in the =DENYWEBVIEW= list, or not in the =ALLOWWEBVIEW= list. Access is granted in case =DENYWEBVIEW= and =ALLOWWEBVIEW= is not defined.
	1. *Hide* the web from an "all webs" search. Enable this restriction with the ==NOSEARCHALL== variable in its %WEBPREFSTOPIC% topic:
		* ==Set <nop>NOSEARCHALL = on==
	1. *Add* ==view== to the list of authenticated scripts in the =.htaccess= file.

%H% This method only works if the ==view== script is authenticated, which means that all Users have to login, even for read-only access. (An open guest account, like Main.TWikiGuest, can get around this, allowing anyone to login to a common account with, for example, view-only access for public webs.) TWikiInstallationGuide has more on Basic Authentication, using the ==.htaccess== file.

---+++ Authenticate and Restrict Selected Webs Only

Use the following setup to provide unrestricted viewing access to open webs, with authentication only on selected webs:

	1. *Restrict* view access to selected Users and Groups. Set one or both of these variables in its %WEBPREFSTOPIC% topic:
		* ==Set <nop>DENYWEBVIEW = &lt; list of Users and Groups &gt;==
		* ==Set <nop>ALLOWWEBVIEW = &lt; list of Users and Groups &gt;==
		* __Note:__ =DENYWEBVIEW= is evaluated before =ALLOWWEBVIEW=. Access is denied if the authenticated person is in the =DENYWEBVIEW= list, or not in the =ALLOWWEBVIEW= list. Access is granted in case =DENYWEBVIEW= and =ALLOWWEBVIEW= is not defined.
	1. *Hide* the web from an "all webs" search. Enable this restriction with the ==NOSEARCHALL== variable in its %WEBPREFSTOPIC% topic:
		* ==Set <nop>NOSEARCHALL = on==
	1. *Enable* the ==$doRememberRemoteUser== flag in ==lib/TWiki.cfg== as described in TWikiUserAuthentication. %WIKITOOLNAME% will now remember the IP address of an authenticated user. 
	1. *Copy* the ==view== script to ==viewauth== (or better, create a symbolic link) 
	1. *Add* ==viewauth== to the list of authenticated scripts in the =.htaccess= file. The ==view== script should not be listed in the =.htaccess= file.

When a user accesses a web where you enabled view restriction, %WIKITOOLNAME% will redirect from the =view= script to the =viewauth= script once (this happens only if the user has never edited a topic). Doing so will ask for authentication. The =viewauth= script shows the requested topic if the user could log on and if the user is authorized to see that web.

%X% *Authenticating webs is not very secure*, as there is a way to circumvent the read access restriction. It can be useful in certain situations - for example, to simplify site organization and clutter, by hiding low traffic webs - but is not recommended for securing sensitive content.


---+++ Hide Control Settings

%T% To hide access control settings from normal browser viewing, place them in comment markers.

<style="background-color:#f5f5f5">
=&lt;!--= <br />
=&nbsp;  * Set <nop>DENYTOPICCHANGE = Main.<nop>SomeGroup= <br />
=--&gt;=
</style>

%STOPINCLUDE%

