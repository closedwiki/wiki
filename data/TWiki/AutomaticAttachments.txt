---+ Automatic Attachments

---++ Summary

This beta feature alters the behaviour of the FILEATTACHMENT meta data, so that TWiki queries the disk instead of looking in the meta data. This logic is switched off by default.
To enable it, look in configure's Miscellaenous options and set the 'AutoAttachments' setting to 1.

---++ Motivation

Having TWiki autoattach makes a lot of sense. Having autoattach means, for example, that you can publish sets of photo just by dumping them in the correct directory.

I have worked around what I saw as the main drawback: that TWiki usefully stores comment data about each attachment. 

---++ Implementation Notes

My implementation refreshes the in-memory metadata structure but does not intentionally save that metadata structure back to TWiki’s Store. 

It alters Store and RcsFile. In readTopic, just before it returns the result it calls _extractMetaDataAutoAttachments to blend the read meta data with 
a refreshed output from the disk. First _extractMetaDataAutoAttachments checks for $TWiki::cfg{AutoAttachPubFiles} and, if set, calls findAndMergeAttachments
that 1) gets the list of files from disk from RcsFile and 2) merges the important fields such as file comment.

In the future I would expect Meta to be type-overridable such that a subclass could exist to explicitly override FILEATTACHMENT meta data information. This would avoid the need for conditional logic in Meta and create a new class TWiki::Meta::FILEATTACHMENT.

---++ What is autoattached

=TWiki::Store::RcsFile= defines getAttachmentList, which returns the files on disk in a logical structure.

It filters in anything in the Web pub dir that:
   * is a file or folder that does not end in ,v
   * is a file or folder that does not start with . or _ (this allows for the convention that folders dedicated to plugin data start with _)

Notably it omits from view any file that has meta data but no longer exists.

---++ Writing back to the meta data

Metadata changes are recalculated and held only in memory. In principle they do not get written to disk. 
This means they incur extra disk operations and that the topic never gets updated with the correct information.

In practice, TWiki sometimes writes the meta data back, because it writes its memory copy back when people update comments on the site.
Hopefully this 'never harms' because 1) it is done only when a user is involved in changing something and 2) It will refuse to show any attachment for which meta is no paired to a file in the web pubdir.

I avoided performing a write back during view because I am aware that TWiki’s coupling of topic and meta data into the same underlying file would mean that last-file-write dates would be altered by periodic saves

See also TWiki:Codev.AutomaticAttachments
