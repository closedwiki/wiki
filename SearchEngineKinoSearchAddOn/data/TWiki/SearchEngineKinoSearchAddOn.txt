%META:TOPICINFO{author="BaseUserMapping_333" date="1194117186" format="1.1" reprev="1.2" version="1.2"}%
<!--
This topic is part of the documentation for SearchEngineKinoSearchAddOn and is
automatically generated from Subversion. Do not edit it! Your edits
will be lost the next time the topic is uploaded!

If you want to report an error in the topic, please raise a report at
http://develop.twiki.org/~twiki4/cgi-bin/view/Bugs/SearchEngineKinoSearchAddOn
-->

---+ Kino Search Engine Add-On
%TOC%

[[http://www.rectangular.com/kinosearch/][KinoSearch]] is a Perl implementation of Lucene search engine (implemented
in Java). This is the base of this indexed search engine for TWiki. With <nop>KinoSearch you create an index over all webs including attachments like Word, Excel and PDF. Based on that you get a really fast search over all topics and the attachments. You need this add-on
   * if your TWiki has grown so big, that normal search is too slow or
   * if you want to do search not only on the topics but also the attchments.

There is already an indexed search based on [[http://www.kasei.com/archives/001039.html][Plucene]]: TWiki:Plugins/SearchEnginePluceneAddOn. But Plucene is relatively slow and is not developed further. <nop>KinoSearch is the successor of Plucene and much faster and more scalable. Thus I created this search engine add-on based on the sources of !SearchEnginePluceneAddOn. 

---++ Usage

---+++ Indexing with kinoindex

With the script ==kinoindex== you index all the public webs. For each topic the text body, the title, the form fields and attached documents are indexed.

By now, you should run this script manually after installation to create the index files used by <nop>KinoSearch. If you want, you can also schedule a weekly or monthly crontab job to create the index files again, or maybe execute it manually when you take down your server for maintenance tasks. To prevent browser access, it has been placed out of the public bin folder.

---+++ Updating with kinoupdate

The ==kinoupdate== script uses the web's ==.changes== files to know about topic modifications. Also, a ==.kinoupdate== file is used on each web directory storing the last timestamp the script was run on it. So when this script is executed, it first checks if there are any topic updates since last execution. The most recent topic updates are removed from the index and then reindexed again.

This script should be executed by an hourly crontab. As before, this script has been placed out of the public bin folder.

---+++ Attachment file types to be indexed

All the PDF, HTML, DOC, XLS and text attachments are also indexed by default. If you want to override this setting you can use a TWiki preference ==KINOSEARCHINDEXEXTENSIONS==. You can copy & paste the next lines in your [[%MAINWEB%.TWikiPreferences]] topic
<verbatim>
   * KinoSearch settings
      * Set KINOSEARCHINDEXEXTENSIONS = .pdf, .html, .txt, .doc, .xls
</verbatim>
or whatever extensions you want. If you add other file extensions, they are treated as ASCII files. If needed, you can add more specialised stringifiers for further document types ( see [[SearchEngineKinoSearchAddOn#Indexing_further_document_types][Indexing further document types]]).

---+++ Indexing of form fields

All form fields are indexed. For this, the form templates are checked and the included fields are indexed. Additionally the name of the form of a topic is stored in the field =form_name=. How to search for this is described below.


*Note*: With =kinoupdate= only the form fields that existed at the time the initial index was created are indexed. Thus if you add a form field, you should create a new index with =kinoindex=.


---+++ Searching with kinosearch

The ==kinosearch== script uses a template ==kinosearch.pattern.tmpl== (if you use the pattern skin). There is also a *KinoSearch* topic with a form ready to use with the *kinosearch* script.

---++++ Query syntax

   * To search for a word, just put that word into the Search box. (Alternatively, add the prefix ==text:== before the word.)
   * To search for a phrase, put the phrase in "double quotes".
   * Use the ==+== and ==-== operators, just as in Google query syntax, to indicate _required_ and _forbidden_ terms, respectively.
   * To search on metadata, prefix the search term with ==field:== where _&lt;field&gt;_ is the field name in the metadata (for instance, _author_).

---++++ Query examples

   * ==text:kino== or just ==kino==
   * ==text:"search engine"== or just =="search engine"==
   * ==author:MarkusHesse== &mdash; note that to search for a TWiki author, use their login name
   * ==form:WebFormName== to get all topics with that form attached.
   * ==CONTACTINFO:MarkusHesse== if you have declared ==CONTACTINFO== as a variable to be indexed
   * ==type:doc== to get all attachments of given type
   * ==web:Sandbox== to get all the topics in a given web
   * ==topic:WebHome== to get all the topics of a given name
   * ==+web:Sandbox +topic:Test== to get all the topics containing "Test" in their titles and belonging to the Sandbox web.

_Note:_ the current version of !KinoSearch does not support wildcards.


---++ Search form
The following form submits text to the ==kinosearch== script. The installation instructions are detailed below.
<form action="%SCRIPTURLPATH%/kinosearch%SCRIPTSUFFIX%/%INTURLENCODE{"%INCLUDINGWEB%"}%/">
   <input type="text" name="search" size="32" /> <input type="submit" value="Search text" /> | [[%TWIKIWEB%.KinoSearch][Help]]
</form>

---++ Indexing further document types

The indexing of attached documents is realised in two steps: In the first step, the content of the document is changed to an ASCII string. This is called stringification. In the second step, this ASCII string is index with <nop>KinoSearch. This is the normal way in all index applications. 

To index different types of documents, it is necessary to have specialised stringifiers, i.e. classes to extract the ASCII text out of the document.  In this add-on, a plug-in mechanism is implemented, so that additional stringifiers can be added without changing the existing code. All stringifier plugins are stored in the directory =lib/TWiki/Contrib/KinoSearch/StringifierPlugins=. 

You can add new stringifier plugins by just adding new files here. The minimum things to be implemented are:
   * The plugin must inherit from =TWiki::Contrib::SearchEngineKinoSearchAddOn::StringifyBase=
   * The plugin must register itself by =__PACKAGE__->register_handler($application, $file_extension)=;
   * The plugin must implement the method =$text = stringForFile ($filename)=

Then you should extend the list in =KINOSEARCHINDEXEXTENSIONS=. Now the defined document type should be index and the new stringifier should be used.

NOTE: If you just extend the list without having a special stringifier in place, this document type is treaded like an ASCII file. For binary document types, this may lead to problems (inpropper search results, long indexing times and potential indexing break downs).

---++ Add-On Installation Instructions

__Note:__ You do not need to install anything on the browser to use this add-on. The following instructions are for the administrator who installs the add-on on the server where TWiki is running. 

Install antiword, xpdf and ppthtml, if you want to index attached Word and PDF files:
   * For Debian you can use =aptitude install antiword=, =aptitude install xpdf-utils= and =aptitude install ppthtml=
   * If you do not install =antiword=, you should remove =.doc= from the =KINOSEARCHINDEXEXTENSIONS= variable.
   * If you do not install =xpdf=, you should remove =.pdf= from the =KINOSEARCHINDEXEXTENSIONS= variable.
   * If you do not install =ppthtml=, you should remove =.ppt= from the =KINOSEARCHINDEXEXTENSIONS= variable.

Like many other TWiki extensions, this module is shipped with a automatic installer script written using the BuildContrib.

   * If you have TWiki 4.1 or later, you can install from the configure interface (Go to Plugins->Find More Extensions)
      * The webserver user has to have permission to write to all areas of your installation for this to work.
      * Take care to install  =antiword= and =xpdf= before.
   * If you have a permanent connection to the internet, you are recommended to use the automatic installer script
      * Just download the BuildContrib_installer perl script and run it. 
   * Notes:
      * The installer script will:
         * Automatically resolve dependencies,
         * Copy files into the right places in your local install (even if you have renamed data directories),
         * check in new versions of any installed files that have existing RCS histories files in your existing install (such as topics).
         * If the $TWIKI_PACKAGES environment variable is set to point to a directory, the installer will try to get archives from there. Otherwise it will try to download from twiki.org or cpan.org, as appropriate.
         * (Developers only: the script will look for twikiplugins/BuildContrib/BuildContrib.tgz before downloading from TWiki.org) 
      * If you don't have a permanent connection, you can still use the automatic installer, by downloading all required TWiki archives to a local directory.
         * Point the environment variable $TWIKI_PACKAGES to this directory, and the installer script will look there first for required TWiki packages.
                      # $TWIKI_PACKAGES is actually a path; you can list several directories separated by : 
         * If you are behind a firewall that blocks access to CPAN, you can pre-install the required CPAN libraries, as described at http://twiki.org/cgi-bin/view/TWiki/HowToInstallCpanModules 
   * If you don't want to use the installer script, or have problems on your platform (e.g. you don't have Perl 5.8), then you can still install manually:
      1. Download and unpack one of the .zip or .tgz archives to a temporary directory.
      1. Manually copy the contents across to the relevant places in your TWiki installation.
      1. Repeat from step 1 for any missing dependencies. 

If you don't use the installer script, you need to install some CPAN modules:
*NOTE*: For some unknown reason, this seems to be necessary, even if you use the installer.

   * Install the CPAN modules <nop>KinoSearch, File::MMagic, Module::Pluggable, HTML::TreeBuilder and Spreadsheet::ParseExcel by running:
      * perl -MCPAN -e "install <nop>KinoSearch"
      * perl -MCPAN -e "install File::MMagic"
      * perl -MCPAN -e "install Module::Pluggable"
      * perl -MCPAN -e "install HTML::TreeBuilder"
      * perl -MCPAN -e "install Spreadsheet::ParseExcel"
      * perl -MCPAN -e "install Text::Iconv"

   * _Note for Windows_: For Windows, make sure, you have a C-compiler in place. This is normally part of Visual Studio etc. 

If you don't use the installer script, you need to install the add-on by hand:
   * Download the ZIP file from the Add-on Home (see below)
   * Unzip ==%TOPIC%.zip== in your twiki installation directory. Content:
     | *File:* | *Description:* |
     | ==bin/kinosearch== | script that searches the index files |
     | ==data/TWiki/KinoSearch.txt== | Kino search topic |
     | ==data/TWiki/KinoSearch.txt,v== | Kino search topic repository |
     | ==data/TWiki/SearchEngineKinoSearchAddOn.txt== | Add-on topic |
     | ==templates/kinosearch.pattern.tmpl== | template used by new search script for the pattern skin |
     | ==kinosearch/bin/LocalLib.cfg== | this file is required and should be modified according to the twiki/lib absolute path of your installation |
     | ==kinosearch/bin/kinoindex== | script that indexes all topics |
     | ==kinosearch/bin/kinoupdate== | script that updates the index |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn.pm== | |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/KinoSearch.pm== | base script with common functionality |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/Index.pm== | functionality for creating and updating the index |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/Search.pm== | functionality to search the index |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/Stringifier.pm== | Class to stringify attached files |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifyBase.pm== | Base class for stringifier plugins |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifierPlugins== | Directory with stringifier plugins |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifierPlugins/DOC.pm== | Stringifier for MS Word documents |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifierPlugins/HTML.pm== | Stringifier for html files |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifierPlugins/PDF.pm== | Stringifier for pdf files |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifierPlugins/Text.pm== | Stringifier for ASCII files |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifierPlugins/XLS.pm== | Stringifier for MS Excel files |
     | ==lib/TWiki/Contrib/SearchEngineKinoSearchAddOn/StringifierPlugins/PPT.pm== | Stringifier for MS Powerpoint files |     
     | ==kinosearch/index/== | directory for index files to be stored |
     | ==kinosearch/logs/== | the index and update logs will be written here - admin should monitor this folder |

   * This add-on uses several preferences which should be set at [[%MAINWEB%.TWikiPreferences]]. All these preferences are optional. If you are fine with the default values given below, you need not change anything.
<verbatim>
   *  KinoSearch settings
      * Set KINOSEARCHINDEXEXTENSIONS = .pdf, .doc, .xml, .html, .txt, .xls, .ppt
      * Set KINOSEARCHSEARCHATTACHMENTSONLY = 0
      * Set KINOSEARCHSEARCHATTACHMENTSONLYLABEL = Display only attachments
      * Set KINOSEARCHINDEXSKIPWEBS = Trash, Sandbox,TWiki
      * Set KINOSEARCHINDEXSKIPATTACHMENTS = Web.SomeTopic.AnAttachment.txt, Web.OtherTopic.OtherAttachment.pdf
      * Set KINOSEARCHANALYSERLANGUAGE = en
      * Set KINOSEARCHSUMMARYLENGTH = 300
      * Set KINOSEARCHDEBUG = 0
</verbatim>
   * You can optionally insert the following lines in your ==lib/LocalSite.cfg==. Thus you can determine where the index is created and where the log files are created. *Note*: The directories must exist. 
<verbatim>
$TWiki::cfg{KinoSearchLogDir} = '/home/httpd/twiki/kinosearch/logs';
$TWiki::cfg{KinoSearchIndexDir} = '/home/httpd/twiki/kinosearch/index';
</verbatim>
   * Remember to edit the file ==kinosearch/bin/LocalLib.cfg== and modify ==twikiLibPath== accordingly to your configuration
   * Test if the installation was successful:
      * Check that =antiword= is in place: Type =antiword= on the prompt and check that the command exists.
      * Check that =pdftotext= is in place: Type =pdftotext= on the prompt and check that the command exists.
      * Check that =ppthtml= is in place: Type =ppthtml= on the prompt and check that the command exists.
      * Change the working directory to the ==kinosearch/bin== twiki installation directory.
      * Run =./kinoindex=
      * Once finished, open a browser window and point it to the ==TWiki/KinoSearch== topic.
      * Just type a query and check the results.


---++ Add-On Info

   * Set SHORTDESCRIPTION = Fast indexed search with indexing of attachments like Word, Excel and PDF

|  Add-on Author: | TWiki:Main/MarkusHesse |
|  Add-on Version: | v1.10, 17 Nov 2007 |
|  Change History: | <!-- versions below in reverse order -->&nbsp; |
| 17 Nov 2007:  | v 1.10, PPT stringifier added |
| 11 Nov 2007:  | v 1.09, Some bugfixing |
|  3 Nov 2007:  | v 1.08, Some bugfixing |
|  7 Oct 2007:  | v 1.07, Some bugfixing |
|  6 Oct 2007:  | v 1.06, Upgrade for 4.1, Release with <nop>BuildContrib|
|  29 Sep 2007: | v 1.05, Indexing of form fields |
|  16 Sep 2007: | v 1.04, Stringifier plugins for doc, xls and html |
|  13 Sep 2007: | v 1.03, Indexing of PDF and TXT attachments |
|  08 Sep 2007: | v 1.02, Index and update script enhanced |
|  24 Aug 2007: | v 1.01, Update script included, Result uses highlighter |
|  14 Aug 2007: | Initial version (v1.000) |
|  CPAN Dependencies: | CPAN:KinoSearch |
|                                | CPAN:File::MMagic |
|                                | CPAN:Module::Pluggable |
|                                | CPAN:HTML::TreeBuilder |
|                                | CPAN:Spreadsheet::ParseExcel |
|  Other Dependencies: | pdftotext (part of xpdf-utils) |
|                                 | antiword |
|                                 | ppthtml  |
|  Perl Version: | Tested with 5.8.0 |
|  License: | GPL |
|  Add-on Home: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC% |
|  Feedback: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC%Dev |
|  Appraisal: | http://TWiki.org/cgi-bin/view/Plugins/%TOPIC%Appraisal |

-- Main.MarkusHesse - 24 Aug 2007
